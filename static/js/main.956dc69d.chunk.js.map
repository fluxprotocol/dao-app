{"version":3,"sources":["compositions/Dialog/Dialog.module.scss","components/Button/Button.module.scss","components/OptionSwitch/OptionSwitch.module.scss","containers/ProposalsOverview/ProposalsOverview.module.scss","containers/CouncilOverview/CouncilOverview.tsx","config.ts","services/WalletService.ts","services/contract/DaoContract.ts","redux/council/council.ts","connectors/CouncilConnector/CouncilConnector.tsx","redux/council/councilActions.ts","containers/Footer/Footer.tsx","translation/trans.ts","containers/Menu/Menu.tsx","redux/account/account.ts","services/AccountService.ts","redux/dao/dao.ts","connectors/MenuConnector/MenuConnector.tsx","redux/account/accountActions.ts","redux/dao/daoActions.ts","containers/Page/Page.tsx","components/Button/Button.tsx","compositions/Dialog/Dialog.tsx","models/Proposal.ts","components/OptionSwitch/OptionSwitch.tsx","containers/ProposalDialog/proposalsForms/ResoluteMarketForm/ResoluteMarketForm.tsx","containers/ProposalDialog/proposalsForms/NewCouncilForm/NewCouncilForm.tsx","containers/ProposalDialog/proposalsForms/AddTokenWhitelist/AddTokenWhitelist.tsx","containers/ProposalDialog/ProposalDialog.tsx","containers/ProposalDialog/services/createDefaultProposalFormValues.ts","containers/ProposalDialog/services/createDefaultResoluteMarketFormValues.ts","containers/ProposalInfo/ProposalInfo.tsx","containers/ProposalsOverview/ProposalsOverview.tsx","models/Market.ts","services/GraphQLService.ts","services/MarketService.ts","services/ProposalsService.ts","redux/proposals/proposals.ts","redux/proposals/proposalsActions.ts","connectors/ProposalsConnector/ProposalsConnector.tsx","routes.ts","pages/HomePage/HomePage.tsx","pages/CouncilPage/CouncilPage.tsx","App.tsx","redux/reducers.ts","redux/store.ts","index.tsx","containers/Page/Page.module.scss"],"names":["module","exports","CouncilOverview","council","map","member","API_URL","process","NULL_CONTRACT","MAX_GAS","BN","STORAGE_BASE","sdkInstance","FluxSdk","network","nullContractId","graphApiUrl","connectSdk","a","connect","connectWallet","sdk","walletConnection","daoInstance","DaoContract","account","contract","this","Contract","viewMethods","changeMethods","get_council","result","get_bond","from_index","limit","get_proposals","description","marketId","payoutNumerator","add_proposal","proposal","kind","market_id","payout_numerator","type","accountId","target","to_add","proposalId","vote","id","finalize","createDaoContract","wallet","councilSlice","createSlice","initialState","loading","errors","name","reducers","setCouncil","state","action","payload","setCouncilLoading","setCouncilErrors","actions","CouncilConnector","dispatch","useDispatch","useSelector","store","useEffect","getCouncil","Footer","trans","key","attributes","uppercaseFirstLetter","translations","console","info","text","resultWithAttributes","label","options","replace","word","undefined","replaceAttributes","charAt","toUpperCase","substring","Menu","onLoginClick","onLogoutClick","onClick","to","routePaths","root","accountSlice","setAccount","setAccountLoading","setAccountErrors","signUserIn","requestSignIn","getAccountInfo","connectedWallet","isSignedIn","nearAccount","getAccountBalance","available","balance","signUserOut","signOut","daoSlice","setDaoInfo","daoInfo","setDaoLoading","setDaoErrors","MenuConnector","accountInfo","error","getBond","bond","handleLoginClick","useCallback","handleLogoutClick","Page","children","hasNavigation","hasFooter","size","className","bodyClassName","pageBodyClassName","classnames","styles","page__body","page","Button","props","s","button","Dialog","title","open","onRequestClose","onSubmitClick","classes","paper","DialogTitle","DialogContent","DialogActions","cancelButton","confirmButton","ProposalKindType","ProposalStatus","OptionSwitch","labelA","labelB","onChange","value","Switch","_","checked","ResoluteMarketForm","values","markets","handlePayoutNumeratorsChange","amount","index","newPayoutNumerators","payoutNumerators","Number","selectedMarket","find","market","percentagesTogether","reduce","prev","current","Select","event","marketDescription","collateralTokenId","outcomeTags","MenuItem","extraInfo","isInvalidMarket","isInvalid","outcome","TextField","InputProps","endAdornment","InputAdornment","position","NewCouncilForm","currentTarget","AddTokenWhitelist","ProposalDialog","onSubmit","useState","newCouncil","addTokenWhitelist","resoluteMarket","ResoluteMarket","formValues","setFormValues","NewCouncil","ProposalInfo","loggedInAccount","onNoClick","onYesClick","onFinalizeClick","date","Date","vote_period_end","log","hasVoted","Boolean","votes","Card","CardActionArea","window","CardContent","Typography","gutterBottom","variant","component","JSON","stringify","status","creator","proposer","toString","CardActions","Vote","disabled","vote_yes","vote_no","Success","ProposalsOverview","onProposalSubmit","onRequestMoreProposals","hasMoreProposals","proposals","isOpen","setOpen","dataLength","length","next","hasMore","loader","infiniteScroll","transformToMarketViewModel","graphResponse","outcome_tags","extra_info","pool","collateral_token_id","cache","InMemoryCache","link","createHttpLink","uri","graphqlClient","ApolloClient","defaultOptions","watchQuery","fetchPolicy","getExpiredMarkets","query","gql","marketsData","data","items","percentagesToDenom","percentages","decimals","hunderdPercent","Big","pow","num","mul","toFixed","proposalsSlice","expiredMarkets","setProposals","setProposalsLoading","setProposalsErrors","setProposalsHasMore","setProposalsExpiredMarkets","loadProposals","reset","getState","currentLoadedProposals","offset","getProposals","ProposalsConnector","getTokenMetadata","tokenMetadata","percentagesInToken","createResoluteMarketProposal","createNewCouncilProposal","createAddTokenToWhitelistProposal","createProposal","routes","exact","inNavigation","path","App","route","combineReducers","dao","createEnhancer","REACT_APP_APP_ENV","composeWithDevTools","applyMiddleware","thunk","preloadedState","enhancer","createStore","configureStore","ReactDOM","render","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.956dc69d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Dialog_paper__XrzDE\",\"cancelButton\":\"Dialog_cancelButton__3SRaV\",\"confirmButton\":\"Dialog_confirmButton__OGdmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Lf63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"OptionSwitch_root__URwjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infiniteScroll\":\"ProposalsOverview_infiniteScroll__yBduR\"};","import React from 'react';\n\ninterface Props {\n    council: string[];\n}\n\nexport default function CouncilOverview({\n    council,\n}: Props) {\n    return (\n        <section>\n            {council.map((member) => (\n                <div key={member}>{member}</div>\n            ))}\n        </section>\n    );\n}","import BN from \"bn.js\";\n\nexport const API_URL = process.env.REACT_APP_API_URL || '';\nexport const NULL_CONTRACT = 'null_address.near';\nexport const MAX_GAS = new BN(\"100000000000000\");\nexport const DAO_ACCOUNT_ID = process.env.REACT_APP_DAO_ACCOUNT_ID || '';\nexport const STORAGE_BASE = new BN('30000000000000000000000');\nexport const FLUX_MARKET_DETAIL_URL = process.env.REACT_APP_FLUX_MARKET_DETAIL_URL || '';","import {\n    Near,\n    connect,\n    WalletConnection,\n    keyStores,\n} from \"near-api-js\";\nimport FluxSdk from '@fluxprotocol/amm-sdk';\n\n\nimport { API_URL, NULL_CONTRACT } from '../config';\n\nexport interface ConnectConfig {\n    accountId?: string;\n    nearInstance?: Near,\n    walletInstance?: WalletConnection,\n    customNodeUrl?: string\n}\n\nlet sdkInstance = new FluxSdk({\n    // @ts-ignore\n    network: process.env.REACT_APP_NETWORK || 'testnet',\n    nullContractId: NULL_CONTRACT,\n    graphApiUrl: API_URL,\n});\n\n\nexport async function connectSdk(): Promise<FluxSdk> {\n    await sdkInstance.connect();\n    return sdkInstance;\n}\n\nexport async function connectWallet(): Promise<WalletConnection> {\n    const sdk = await connectSdk();\n    return sdk.walletConnection!;\n}\n\n","import BN from \"bn.js\";\nimport { Account, Contract } from \"near-api-js\";\nimport { DAO_ACCOUNT_ID, MAX_GAS, STORAGE_BASE } from \"../../config\";\nimport { Proposal } from \"../../models/Proposal\";\nimport { connectWallet } from \"../WalletService\";\n\nclass DaoContract {\n    contract: Contract;\n\n    constructor(account: Account) {\n        this.contract = new Contract(account, DAO_ACCOUNT_ID, {\n            viewMethods: ['get_council', 'get_bond', 'get_proposals'],\n            changeMethods: ['add_proposal', 'vote', 'finalize'],\n        });\n    }\n\n    async getCouncil(): Promise<string[]> {\n        // @ts-ignore\n        const result = await this.contract.get_council({ a: 1 });\n\n        return result;\n    }\n\n    async getBond(): Promise<string> {\n        // @ts-ignore\n        const result = await this.contract.get_bond({ a: 1 });\n\n        return result;\n    }\n\n    async getProposals(from_index = \"0\", limit = \"1000\"): Promise<Proposal[]> {\n        // @ts-ignore\n        const result = await this.contract.get_proposals({ \n            from_index,\n            limit,\n        });\n\n        return result;\n    }\n\n    async createResoluteMarketProposal(description: string, marketId: string, payoutNumerator?: string[]) {\n        // @ts-ignore\n        this.contract.add_proposal({\n            proposal: {\n                description,\n                kind: {\n                    market_id: marketId,\n                    payout_numerator: payoutNumerator,\n                    type: 'ResoluteMarket',\n                }\n            }\n        }, MAX_GAS, STORAGE_BASE);\n    }\n\n    async createNewCouncilProposal(description: string, accountId: string) {\n        // @ts-ignore\n        this.contract.add_proposal({\n            proposal: {\n                description,\n                kind: {\n                    target: accountId,\n                    type: 'NewCouncil',\n                }\n            }\n        }, MAX_GAS, STORAGE_BASE);\n    }\n\n    async createAddTokenToWhitelistProposal(description: string, accountId: string) {\n        // @ts-ignore\n        this.contract.add_proposal({\n            proposal: {\n                description,\n                kind: {\n                    to_add: accountId,\n                    type: 'AddTokenWhitelist',\n                }\n            }\n        }, MAX_GAS, STORAGE_BASE);\n    }\n\n    vote(proposalId: string, vote: 'Yes' | 'No') {\n        // @ts-ignore\n        this.contract.vote({\n            id: proposalId,\n            vote,\n        }, MAX_GAS, new BN(0));\n    }\n\n    finalize(proposalId: string) {\n        // @ts-ignore\n        this.contract.finalize({\n            id: proposalId,\n        }, MAX_GAS, new BN(0));\n    }\n}\n\n\nlet daoInstance: DaoContract;\n\nexport default async function createDaoContract(): Promise<DaoContract> {\n    if (daoInstance) {\n        return daoInstance;\n    }\n\n    const wallet = await connectWallet();\n    daoInstance = new DaoContract(wallet.account());\n\n    return daoInstance;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type CouncilState = Readonly<{\n    council: string[];\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: CouncilState = {\n    council: [],\n    loading: false,\n    errors: [],\n};\n\nconst councilSlice = createSlice({\n    initialState,\n    name: 'council',\n    reducers: {\n        setCouncil(state: CouncilState, action: PayloadAction<string[]>): CouncilState {\n            return ({\n                ...state,\n                council: action.payload,\n            });\n        },\n        setCouncilLoading(state: CouncilState, action: PayloadAction<boolean>): CouncilState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setCouncilErrors(state: CouncilState, action: PayloadAction<string[]>): CouncilState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setCouncil,\n    setCouncilErrors,\n    setCouncilLoading,\n} = councilSlice.actions;\n\nexport default councilSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CouncilOverview from '../../containers/CouncilOverview';\nimport { loadCouncil } from '../../redux/council/councilActions';\nimport { Reducers } from '../../redux/reducers';\n\n\nexport default function CouncilConnector() {\n    const dispatch = useDispatch();\n    const council = useSelector((store: Reducers) => store.council.council);\n\n    useEffect(() => {\n        dispatch(loadCouncil());\n    }, []);\n\n    return (\n        <CouncilOverview council={council} />\n    );\n}","import createDaoContract from \"../../services/contract/DaoContract\";\nimport { setCouncil, setCouncilErrors, setCouncilLoading } from \"./council\"\n\nexport function loadCouncil() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setCouncilLoading(true));\n            const contract = await createDaoContract();\n            const council = await contract.getCouncil();\n            dispatch(setCouncil(council));\n            dispatch(setCouncilLoading(false));\n        } catch(error) {\n            dispatch(setCouncilErrors(error));\n            dispatch(setCouncilLoading(false));\n        }\n    }\n}","import React from 'react';\n\n\nexport default function Footer() {\n    return (\n        <footer>\n            \n        </footer>\n    );\n}","import translations from './lang/translations.eng.json';\n\ninterface Attributes {\n    [key: string]: string;\n}\n\nfunction replaceAttributes(label: string, options: Attributes = {}): string {\n    // Replaces any \":key\" with a value in the options\n    return label.replace(/:(\\w+)/gi, (word) => {\n        const key = word.replace(/^:/, '');\n\n        if (options[key] === undefined || options[key] === null) {\n            return '';\n        }\n\n        return options[key];\n    });\n}\n\nexport function ucFirstLetter(text: string): string {\n    return text.charAt(0).toUpperCase() + text.substring(1);\n}\n\n\nexport default function trans(key: string, attributes?: Attributes, uppercaseFirstLetter?: boolean): string {\n    // @ts-ignore\n    const result: string = translations[key];\n\n    if (!result) {\n        console.info('Transaltion not found for', key)\n        return key;\n    }\n\n    const resultWithAttributes = replaceAttributes(result, attributes);\n    return uppercaseFirstLetter ? ucFirstLetter(resultWithAttributes) : resultWithAttributes;\n}\n\nexport function booleanToYesNo(bool = false): string {\n    return bool ? trans('global.yes') : trans('global.no');\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Account } from '../../models/Account';\nimport { routePaths } from '../../routes';\nimport trans from '../../translation/trans';\n\ninterface Props {\n    onLoginClick: () => void;\n    onLogoutClick: () => void;\n    account: Account | null;\n}\n\nexport default function Menu({\n    onLoginClick,\n    onLogoutClick,\n    account,\n}: Props) {\n    return (\n        <section>\n            {!account && (\n                <button onClick={onLoginClick}>{trans('menu.login')}</button>\n            )}\n\n            {account && (\n                <>\n                    <span>{trans('menu.loggedInAs', { accountId: account.accountId })}</span>\n                    <button onClick={onLogoutClick}>{trans('menu.logout')}</button>\n                </>\n            )}\n\n            <Link to={routePaths.root()}>{trans('menu.item.home')}</Link>\n            <Link to={routePaths.council()}>{trans('menu.item.council')}</Link>\n        </section>\n    );\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Account } from '../../models/Account';\n\nexport type AccountState = Readonly<{\n    account: Account | null;\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: AccountState = {\n    account: null,\n    loading: false,\n    errors: [],\n};\n\nconst accountSlice = createSlice({\n    initialState,\n    name: 'account',\n    reducers: {\n        setAccount(state: AccountState, action: PayloadAction<Account | null>): AccountState {\n            return ({\n                ...state,\n                account: action.payload,\n            });\n        },\n        setAccountLoading(state: AccountState, action: PayloadAction<boolean>): AccountState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setAccountErrors(state: AccountState, action: PayloadAction<string[]>): AccountState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setAccount,\n    setAccountErrors,\n    setAccountLoading,\n} = accountSlice.actions;\n\nexport default accountSlice.reducer;\n","import { NULL_CONTRACT } from \"../config\";\nimport { Account } from \"../models/Account\";\nimport trans from \"../translation/trans\";\nimport { connectWallet } from \"./WalletService\";\n\nexport async function signUserIn() {\n    const connectedWallet = await connectWallet();\n    connectedWallet.requestSignIn(NULL_CONTRACT, trans('global.appName'));\n}\n\nexport async function getAccountInfo(): Promise<Account | null> {\n    const connectedWallet = await connectWallet();\n\n    if (!connectedWallet.isSignedIn()) {\n        return null;\n    }\n\n    const nearAccount = connectedWallet.account();\n\n    return {\n        accountId: nearAccount.accountId,\n        balance: (await nearAccount.getAccountBalance()).available,\n    };\n}\n\nexport async function signUserOut() {\n    const connectedWallet = await connectWallet();\n    connectedWallet.signOut();\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DaoInfo } from '../../models/DaoInfo';\n\nexport type DaoState = Readonly<{\n    daoInfo?: DaoInfo;\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: DaoState = {\n    loading: false,\n    errors: [],\n};\n\nconst daoSlice = createSlice({\n    initialState,\n    name: 'daoInfo',\n    reducers: {\n        setDaoInfo(state: DaoState, action: PayloadAction<DaoInfo>): DaoState {\n            return ({\n                ...state,\n                daoInfo: action.payload,\n            });\n        },\n        setDaoLoading(state: DaoState, action: PayloadAction<boolean>): DaoState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setDaoErrors(state: DaoState, action: PayloadAction<string[]>): DaoState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setDaoErrors,\n    setDaoInfo,\n    setDaoLoading,\n} = daoSlice.actions;\n\nexport default daoSlice.reducer;\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Menu from '../../containers/Menu';\nimport { getAccount, signIn, signOut } from '../../redux/account/accountActions';\nimport { loadDaoInfo } from '../../redux/dao/daoActions';\nimport { Reducers } from '../../redux/reducers';\n\n\nexport default function MenuConnector() {\n    const dispatch = useDispatch();\n    const accountInfo = useSelector((store: Reducers) => store.account.account);\n\n    useEffect(() => {\n        if (!accountInfo) {\n            dispatch(getAccount());\n        }\n\n        dispatch(loadDaoInfo());\n    }, [dispatch, accountInfo]);\n\n    const handleLoginClick = useCallback(() => {\n        dispatch(signIn());\n    }, []);\n\n    const handleLogoutClick = useCallback(() => {\n        dispatch(signOut());\n    }, []);\n\n    return (\n        <Menu \n            onLoginClick={handleLoginClick} \n            onLogoutClick={handleLogoutClick}\n            account={accountInfo}\n        />\n    );\n}","import { setAccount, setAccountLoading } from \"./account\";\nimport { signUserIn, getAccountInfo, signUserOut } from '../../services/AccountService';\n\nexport function signIn() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setAccountLoading(true));\n            await signUserIn();\n            dispatch(setAccountLoading(false));\n        } catch (error) {\n            dispatch(setAccountLoading(false));\n            console.error('[signIn]', error);\n        }\n    }\n}\n\nexport function getAccount() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setAccountLoading(true));\n            const account = await getAccountInfo();\n            dispatch(setAccount(account));\n            dispatch(setAccountLoading(false));\n        } catch (error) {\n            dispatch(setAccountLoading(false));\n            console.error('[getAccount]', error);\n        }\n    }\n}\n\nexport function signOut() {\n    return async (dispatch: Function) => {\n        await signUserOut();\n        dispatch(setAccount(null));\n    }\n}\n","import createDaoContract from \"../../services/contract/DaoContract\";\nimport { setDaoErrors, setDaoInfo, setDaoLoading } from \"./dao\"\n\nexport function loadDaoInfo() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setDaoLoading(true));\n            const contract = await createDaoContract();\n            const bond = await contract.getBond();\n\n            dispatch(setDaoInfo({\n                bond,\n            }));\n    \n            dispatch(setDaoLoading(false));\n        } catch (error) {\n            dispatch(setDaoErrors(error));\n            dispatch(setDaoLoading(false));\n        }\n    }\n}","import React, { PropsWithChildren, ReactElement } from \"react\";\nimport classnames from 'classnames';\n\nimport Footer from \"../Footer\";\nimport MenuConnector from \"../../connectors/MenuConnector\";\n\nimport styles from './Page.module.scss';\ninterface Props {\n    className?: string;\n    bodyClassName?: string;\n    hasNavigation?: boolean;\n    hasFooter?: boolean;\n    size?: 'large' | 'medium' | 'unrestricted';\n}\n\nexport default function Page({\n    children,\n    hasNavigation = true,\n    hasFooter = true,\n    size = 'medium',\n    className = '',\n    bodyClassName = '',\n}: PropsWithChildren<Props>): ReactElement {\n    const pageBodyClassName = classnames(styles.page__body, bodyClassName, {\n        [styles['page__body--large']]: size === 'large',\n        [styles['page__body--unrestricted']]: size === 'unrestricted',\n    });\n\n    return (\n        <div className={`${styles.page} ${className}`}>\n            {/* Normally don't put connectors in containers.. */}\n            {hasNavigation && <MenuConnector />}\n            <main className={pageBodyClassName}>\n                {children}\n            </main>\n            {hasFooter && <Footer />}\n        </div>\n    );\n}\n","import React, { FormEvent, ReactNode } from 'react';\nimport { default as MuiButton } from '@material-ui/core/Button';\n\nimport s from './Button.module.scss';\n\ninterface ButtonProps {\n    children: ReactNode | string;\n    className?: string;\n    onClick?: (event: FormEvent<HTMLButtonElement>) => void;\n    variant?: \"text\" | \"outlined\" | \"contained\";\n    disabled?: boolean;\n};\n\nexport default function Button({\n    className = '',\n    children,\n    ...props\n}: ButtonProps) {\n    return (\n        <MuiButton {...props} className={`${s.button} ${className}`}>{children}</MuiButton>\n    );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { default as MuiDialog } from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '../../components/Button';\n\nimport s from './Dialog.module.scss';\nimport trans from '../../translation/trans';\n\ninterface Props {\n    title: string;\n    open: boolean;\n    onRequestClose: () => void;\n    onSubmitClick: () => void;\n}\n\nexport default function Dialog({\n    title,\n    children,\n    open,\n    onRequestClose,\n    onSubmitClick,\n}: PropsWithChildren<Props>) {\n    return (\n        <MuiDialog open={open} classes={{ paper: s.paper }}>\n            <DialogTitle>\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                {children}\n            </DialogContent>\n            <DialogActions>\n                <Button className={s.cancelButton} onClick={onRequestClose}>\n                    {trans('global.action.cancel')}\n                </Button>\n                <Button className={s.confirmButton} onClick={onSubmitClick}>\n                    {trans('global.action.submit')}\n                </Button>\n            </DialogActions>\n        </MuiDialog>\n    );\n}\n","import { Vote } from \"./Vote\"\n\nexport enum ProposalKindType {\n    ResoluteMarket = 'ResoluteMarket',\n    NewCouncil = 'NewCouncil',\n    AddTokenWhitelist = 'AddTokenWhitelist',\n}\n\nexport enum ProposalStatus {\n    /// Proposal is in active voting stage.\n    Vote = 'Vote',\n    /// Proposal has successfully passed.\n    Success = 'Success',\n    /// Proposal was rejected by the vote.\n    Reject = 'Reject',\n    /// Proposal is finalized\n    Finalized = 'Finalized',\n    /// Proposal is rejected\n    Rejected = 'Rejected'\n}\n\nexport interface Proposal {\n    status: ProposalStatus;\n    proposer: string;\n    description: string;\n    kind: {\n        type: ProposalKindType,\n    };\n    last_vote: number;\n    vote_period_end: number;\n    vote_yes: number;\n    vote_no: number;\n    votes: {\n        [key: string]: Vote;\n    };\n}","import React, { ReactElement } from 'react';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport s from './OptionSwitch.module.scss';\n\ninterface Props {\n    labelA: string;\n    labelB: string;\n    onChange: (checked: boolean) => void;\n    value?: boolean;\n}\n\nexport default function OptionSwitch({\n    labelA,\n    labelB,\n    onChange,\n    value,\n}: Props): ReactElement {\n    return (\n        <span className={s.root}>\n            <span>{labelA}</span>\n            <Switch value={value} onChange={(_, checked) => onChange(checked)} />\n            <span>{labelB}</span>\n        </span>\n    );\n}\n","import InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport React, { ChangeEvent } from 'react';\nimport OptionSwitch from '../../../../components/OptionSwitch';\nimport { MarketViewModel } from '../../../../models/Market';\nimport trans from '../../../../translation/trans';\nimport { ResoluteMarketFormValues } from '../../services/createDefaultResoluteMarketFormValues';\n\ninterface Props {\n    onChange: (values: ResoluteMarketFormValues) => void;\n    values: ResoluteMarketFormValues;\n    markets: MarketViewModel[];\n}\n\nexport default function ResoluteMarketForm({\n    onChange,\n    values,\n    markets,\n}: Props) {\n    function handleMarketTypeChange(isInvalid: boolean) {\n        onChange({\n            ...values,\n            isInvalidMarket: isInvalid,\n        });\n    }\n\n    function handleMarketIdChange(event: ChangeEvent<{ name?: string, value: unknown }>) {\n        const market = markets.find(market => market.id === event.target.value);\n\n        onChange({\n            ...values,\n            marketId: market?.id ?? '',\n            marketDescription: market?.description ?? '',\n            collateralTokenId: market?.collateralTokenId ?? '',\n            payoutNumerators: market?.outcomeTags.map(_ => 0) ?? [],\n        });\n    }\n\n    function handlePayoutNumeratorsChange(amount: string, index: number) {\n        const newPayoutNumerators = values.payoutNumerators;\n        newPayoutNumerators[index] = Number(amount);\n\n        onChange({\n            ...values,\n            payoutNumerators: newPayoutNumerators,\n        });\n    }\n\n    const selectedMarket = markets.find(market => market.id === values.marketId);\n    const percentagesTogether = values.payoutNumerators.reduce((prev, current) => prev + current, 0);\n\n    return (\n        <div>\n            <div>\n                <Select label={trans('resoluteMarketForm.input.marketId')} value={values.marketId} onChange={handleMarketIdChange}>\n                    {markets.map((market) => (\n                        <MenuItem key={market.id} value={market.id}>{market.id} - {market.description}</MenuItem>\n                    ))}\n                </Select>\n            </div>\n            <div>\n                <br />\n                {selectedMarket?.extraInfo}\n            </div>\n            <OptionSwitch\n                labelA={trans('resoluteMarketForm.input.validMarket')}\n                labelB={trans('resoluteMarketForm.input.invalidMarket')} \n                value={values.isInvalidMarket}\n                onChange={handleMarketTypeChange}\n            />\n            <div>\n                {!values.isInvalidMarket && (\n                    <div>\n                        {selectedMarket?.outcomeTags.map((outcome, index) => (\n                            <div key={index}>\n                                <TextField \n                                    label={outcome}\n                                    onChange={(event) => handlePayoutNumeratorsChange(event.target.value, index)}\n                                    value={values.payoutNumerators[index] || '0'}\n                                    type=\"number\"\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <span>%</span>\n                                            </InputAdornment>\n                                        )\n                                    }}\n                                />\n                            </div>\n                        ))}\n\n                        {percentagesTogether !== 100 && (\n                            <p>{trans('resoluteMarketForm.error.not100')}</p>\n                        )}\n                    </div>\n                )}\n\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { NewCouncilFormValues } from '../../services/createDefaultProposalFormValues';\nimport trans from '../../../../translation/trans';\n\ninterface Props {\n    onChange: (values: NewCouncilFormValues) => void;\n    values: NewCouncilFormValues;\n}\n\nexport default function NewCouncilForm({\n    onChange,\n    values,\n}: Props) {\n    function handleDescriptionChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            description: event.currentTarget.value,\n        });\n    }\n\n    function handleAccountIdChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            accountId: event.currentTarget.value,\n        });\n    }\n\n    return (\n        <div>\n            <div>\n                <TextField\n                    label={trans('newCouncilForm.input.accountId')}\n                    onChange={handleAccountIdChange}\n                    value={values.accountId}\n                />\n            </div>\n            <div>\n                <TextField\n                    label={trans('newCouncilForm.input.description')}\n                    onChange={handleDescriptionChange}\n                    value={values.description}\n                />\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { AddTokenWhitelistFormValues } from '../../services/createDefaultProposalFormValues';\nimport trans from '../../../../translation/trans';\n\ninterface Props {\n    onChange: (values: AddTokenWhitelistFormValues) => void;\n    values: AddTokenWhitelistFormValues;\n}\n\n\nexport default function AddTokenWhitelist({\n    onChange,\n    values,\n}: Props) {\n    function handleDescriptionChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            description: event.currentTarget.value,\n        });\n    }\n\n    function handleAccountIdChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            accountId: event.currentTarget.value,\n        });\n    }\n\n    return (\n        <div>\n            <div>\n                <TextField\n                    label={trans('addTokenWhitelist.input.accountId')}\n                    onChange={handleAccountIdChange}\n                    value={values.accountId}\n                />\n            </div>\n            <div>\n                <TextField\n                    label={trans('addTokenWhitelist.input.description')}\n                    onChange={handleDescriptionChange}\n                    value={values.description}\n                />\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent, useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Dialog from '../../compositions/Dialog';\nimport trans from '../../translation/trans';\nimport ResoluteMarketForm from './proposalsForms/ResoluteMarketForm';\nimport { ProposalKindType } from '../../models/Proposal';\nimport createDefaultProposalFormValues, { NewCouncilFormValues } from './services/createDefaultProposalFormValues';\nimport { ResoluteMarketFormValues } from './services/createDefaultResoluteMarketFormValues';\nimport { ProposalFormValues } from '../../services/ProposalsService';\nimport { MarketViewModel } from '../../models/Market';\nimport NewCouncilForm from './proposalsForms/NewCouncilForm';\nimport AddTokenWhitelist from './proposalsForms/AddTokenWhitelist';\n\ninterface Props {\n    open: boolean;\n    markets: MarketViewModel[];\n    onRequestClose: () => void;\n    onSubmit: (value: ProposalFormValues) => void;\n}\n\nexport default function ProposalDialog({\n    open,\n    markets,\n    onRequestClose,\n    onSubmit,\n}: Props) {\n    const [formValues, setFormValues] = useState(createDefaultProposalFormValues());\n\n    function handleSelectChange(event: ChangeEvent<{name?: string, value: unknown}>) {\n        setFormValues({\n            ...formValues,\n            type: event.target.value as ProposalKindType\n        });\n    }\n\n    function handleResoluteMarketChange(resoluteMarket: ResoluteMarketFormValues) {\n        setFormValues({\n            ...formValues,\n            resoluteMarket,\n        });\n    }\n\n    function handleNewCouncilChange(newCouncil: NewCouncilFormValues) {\n        setFormValues({\n            ...formValues,\n            newCouncil,\n        });\n    }\n\n    function handleAddTokenWhitelistChange(addTokenWhitelist: NewCouncilFormValues) {\n        setFormValues({\n            ...formValues,\n            addTokenWhitelist,\n        });\n    }\n\n    return (\n        <Dialog \n            open={open} \n            title={trans('proposalDialog.title')}\n            onSubmitClick={() => onSubmit(formValues)}\n            onRequestClose={onRequestClose}\n        >\n            <Select value={formValues.type} onChange={handleSelectChange}>\n                <MenuItem value={ProposalKindType.ResoluteMarket}>{trans('proposalDialog.types.resoluteMarket')}</MenuItem>\n                <MenuItem value={ProposalKindType.NewCouncil}>{trans('proposalDialog.types.newCouncil')}</MenuItem>\n                <MenuItem value={ProposalKindType.AddTokenWhitelist}>{trans('proposalDialog.types.addTokenWhitelist')}</MenuItem>\n            </Select>\n\n            {formValues.type === ProposalKindType.ResoluteMarket && (\n                <ResoluteMarketForm\n                    markets={markets}\n                    values={formValues.resoluteMarket}\n                    onChange={handleResoluteMarketChange}\n                />\n            )}\n\n            {formValues.type === ProposalKindType.NewCouncil && (\n                <NewCouncilForm\n                    values={formValues.newCouncil}\n                    onChange={handleNewCouncilChange}\n                />\n            )}\n\n            {formValues.type === ProposalKindType.AddTokenWhitelist && (\n                <AddTokenWhitelist \n                    values={formValues.addTokenWhitelist}\n                    onChange={handleAddTokenWhitelistChange}\n                />\n            )}\n        </Dialog>\n    );\n}","import { ProposalKindType } from \"../../../models/Proposal\";\nimport { ProposalFormValues } from \"../../../services/ProposalsService\";\nimport createDefaultResoluteMarketFormValues from \"./createDefaultResoluteMarketFormValues\";\n\nexport interface NewCouncilFormValues {\n    accountId: string;\n    description: string;\n}\n\nexport interface AddTokenWhitelistFormValues {\n    accountId: string;\n    description: string;\n}\n\nexport default function createDefaultProposalFormValues(): ProposalFormValues {\n    return {\n        newCouncil: {\n            accountId: '',\n            description: '',\n        },\n        addTokenWhitelist: {\n            accountId: '',\n            description: '',\n        },\n        resoluteMarket: createDefaultResoluteMarketFormValues(),\n        type: ProposalKindType.ResoluteMarket,\n    }\n}","export interface ResoluteMarketFormValues {\n    isInvalidMarket: boolean;\n    marketId: string;\n    marketDescription: string;\n    collateralTokenId: string;\n    payoutNumerators: number[];\n}\n\nexport default function createDefaultResoluteMarketFormValues(): ResoluteMarketFormValues {\n    return {\n        isInvalidMarket: false,\n        marketId: '',\n        marketDescription: '',\n        collateralTokenId: '',\n        payoutNumerators: [],\n    };\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Proposal, ProposalKindType, ProposalStatus } from '../../models/Proposal';\nimport Button from '../../components/Button';\nimport trans from '../../translation/trans';\nimport { FLUX_MARKET_DETAIL_URL } from '../../config';\nimport { Account } from '../../models/Account';\n\ninterface Props {\n    proposal: Proposal;\n    loggedInAccount: Account | null;\n    onYesClick: () => void;\n    onNoClick: () => void;\n    onFinalizeClick: () => void;\n}\n\nexport default function ProposalInfo({\n    proposal,\n    loggedInAccount,\n    onNoClick,\n    onYesClick,\n    onFinalizeClick,\n}: Props) {\n    const date = new Date(proposal.vote_period_end / 1000000);\n    const accountId = loggedInAccount?.accountId || '';\n\n    console.log('[] proposal -> ', proposal);\n\n    function handleCardClick() {\n        if (proposal.kind.type === ProposalKindType.ResoluteMarket) {\n            // @ts-ignore\n            window.open(`${FLUX_MARKET_DETAIL_URL}${proposal.kind.market_id}`, '_blank');\n        }\n    }\n\n    const hasVoted = Boolean(proposal.votes[accountId]);\n\n    return (\n        <Card>\n            <CardActionArea onClick={handleCardClick}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {proposal.description}\n                    </Typography>\n                    <pre>\n                        {JSON.stringify(proposal.kind, null, 4)}\n                    </pre>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.status', {\n                            status: proposal.status\n                        })}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.creator', {\n                            creator: proposal.proposer\n                        })}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.votePeriodEnd', {\n                            date: date.toString(),\n                        })}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                {proposal.status === ProposalStatus.Vote && (\n                    <>\n                        <Button disabled={hasVoted} onClick={onYesClick}>\n                            {trans('proposalInfo.action.voteYes', {\n                                amount: proposal.vote_yes.toString(),\n                            })}\n                        </Button>\n                        <Button disabled={hasVoted} onClick={onNoClick}>\n                            {trans('proposalInfo.action.voteNo', {\n                                amount: proposal.vote_no.toString(),\n                            })}\n                        </Button>\n                    </>\n                )}\n\n                {proposal.status === ProposalStatus.Success && (\n                    <Button onClick={onFinalizeClick}>\n                        {trans('proposalInfo.action.finalize')}\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    );\n}","import React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { MarketViewModel } from '../../models/Market';\nimport { Account } from '../../models/Account';\nimport { Proposal } from '../../models/Proposal';\nimport { ProposalFormValues } from '../../services/ProposalsService';\nimport trans from '../../translation/trans';\nimport ProposalDialog from '../ProposalDialog';\nimport ProposalInfo from '../ProposalInfo';\n\nimport s from './ProposalsOverview.module.scss';\n\ninterface Props {\n    onProposalSubmit: (values: ProposalFormValues) => void;\n    proposals: Proposal[];\n    loggedInAccount: Account | null;\n    markets: MarketViewModel[];\n    hasMoreProposals: boolean;\n    onRequestMoreProposals: () => void;\n    onYesClick: (proposal: Proposal, id: number) => void;\n    onNoClick: (proposal: Proposal, id: number) => void;\n    onFinalizeClick: (proposal: Proposal, id: number) => void;\n}\n\n\nexport default function ProposalsOverview({\n    onProposalSubmit,\n    onNoClick,\n    onYesClick,\n    onFinalizeClick,\n    onRequestMoreProposals,\n    hasMoreProposals,\n    proposals,\n    markets,\n    loggedInAccount,\n}: Props) {\n    const [isOpen, setOpen] = useState(false);\n\n    function onCreateClick() {\n        setOpen(true);\n    }\n\n    return (\n        <section>\n            <button onClick={onCreateClick}>{trans('proposalsOverview.create')}</button>\n\n            <InfiniteScroll\n                dataLength={proposals.length}\n                next={onRequestMoreProposals}\n                hasMore={hasMoreProposals}\n                loader={<div />}\n                className={s.infiniteScroll}\n            >\n                {proposals.map((proposal, index) => (\n                    <ProposalInfo\n                        key={index}\n                        proposal={proposal}\n                        onNoClick={() => onNoClick(proposal, index)}\n                        onYesClick={() => onYesClick(proposal, index)}\n                        onFinalizeClick={() => onFinalizeClick(proposal, index)}\n                        loggedInAccount={loggedInAccount}\n                    />\n                ))}\n            </InfiniteScroll>\n\n            <ProposalDialog\n                markets={markets}\n                open={isOpen} \n                onRequestClose={() => setOpen(false)}\n                onSubmit={onProposalSubmit}\n            />\n        </section>\n    );\n}","export interface GraphMarketResponse {\n    description: string;\n    id: string;\n    outcome_tags: string[];\n    extra_info: string;\n    pool: {\n        collateral_token_id: string;\n    }\n}\n\nexport interface MarketViewModel {\n    id: string;\n    description: string;\n    outcomeTags: string[];\n    extraInfo: string;\n    collateralTokenId: string;\n}\n\nexport function transformToMarketViewModel(\n    graphResponse: GraphMarketResponse,\n): MarketViewModel {\n    return {\n        id: graphResponse.id,\n        description: graphResponse.description,\n        outcomeTags: graphResponse.outcome_tags,\n        extraInfo: graphResponse.extra_info,\n        collateralTokenId: graphResponse.pool.collateral_token_id,\n    }\n}\n","import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { API_URL } from '../config';\n\nconst cache = new InMemoryCache();\nconst link = createHttpLink({\n    uri: API_URL,\n});\n\nexport const graphqlClient = new ApolloClient({\n    cache,\n    link,\n\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'cache-and-network',\n        }\n    }\n});\n","import { gql } from \"@apollo/client\";\nimport { GraphMarketResponse, MarketViewModel, transformToMarketViewModel } from \"../models/Market\";\nimport { graphqlClient } from \"./GraphQLService\";\n\nexport async function getExpiredMarkets(): Promise<MarketViewModel[]> {\n    try {\n        const result = await graphqlClient.query({\n            query: gql`\n                query ExiredMarkets {\n                    markets: getMarkets(filters: { expired: true, finalized: false }) {\n                        items {\n                            id\n                            description\n                            outcome_tags\n                            extra_info\n                            pool {\n                                collateral_token_id\n                            }\n                        }\n                    }\n                }\n            `,\n        });\n\n        const marketsData: GraphMarketResponse[] = result.data.markets.items;\n        \n        return marketsData.map(market => transformToMarketViewModel(market));\n    } catch (error) {\n        console.error('[getExpiredMarkets]', error);\n        return [];\n    }\n}","import Big from 'big.js';\nimport { AddTokenWhitelistFormValues, NewCouncilFormValues } from '../containers/ProposalDialog/services/createDefaultProposalFormValues';\n\nimport { ResoluteMarketFormValues } from \"../containers/ProposalDialog/services/createDefaultResoluteMarketFormValues\";\nimport { ProposalKindType } from \"../models/Proposal\";\n\nexport interface ProposalFormValues {\n    newCouncil: NewCouncilFormValues;\n    resoluteMarket: ResoluteMarketFormValues;\n    addTokenWhitelist: AddTokenWhitelistFormValues;\n    type: ProposalKindType;\n}\n\nexport function fetchProposals() {\n    \n}\n\nexport function payoutNumeratorStringToPercentages(rawValue: string) {\n    return rawValue.split(' ').map(v => Number(v.trim()));\n}\n\nexport function percentagesToDenom(percentages: number[], decimals: number) {\n    const hunderdPercent = new Big(10).pow(decimals);\n    return percentages.map(num => hunderdPercent.mul(num / 100).toFixed(0));\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { MarketViewModel } from '../../models/Market';\nimport { Proposal } from '../../models/Proposal';\n\nexport type ProposalsState = Readonly<{\n    proposals: Proposal[];\n    hasMoreProposals: boolean;\n    expiredMarkets: MarketViewModel[];\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: ProposalsState = {\n    hasMoreProposals: true,\n    proposals: [],\n    expiredMarkets: [],\n    loading: false,\n    errors: [],\n};\n\nconst proposalsSlice = createSlice({\n    initialState,\n    name: 'proposals',\n    reducers: {\n        setProposals(state: ProposalsState, action: PayloadAction<Proposal[]>): ProposalsState {\n            return ({\n                ...state,\n                proposals: action.payload,\n            });\n        },\n        setProposalsLoading(state: ProposalsState, action: PayloadAction<boolean>): ProposalsState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setProposalsErrors(state: ProposalsState, action: PayloadAction<string[]>): ProposalsState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n        setProposalsHasMore(state: ProposalsState, action: PayloadAction<boolean>): ProposalsState {\n            return ({\n                ...state,\n                hasMoreProposals: action.payload,\n            });\n        },\n        setProposalsExpiredMarkets(state: ProposalsState, action: PayloadAction<MarketViewModel[]>): ProposalsState {\n            return ({\n                ...state,\n                expiredMarkets: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setProposals,\n    setProposalsLoading,\n    setProposalsErrors,\n    setProposalsExpiredMarkets,\n    setProposalsHasMore,\n} = proposalsSlice.actions;\n\nexport default proposalsSlice.reducer;\n","import { ProposalKindType } from \"../../models/Proposal\";\nimport createDaoContract from \"../../services/contract/DaoContract\";\nimport { getExpiredMarkets } from \"../../services/MarketService\";\nimport { percentagesToDenom, ProposalFormValues } from \"../../services/ProposalsService\";\nimport { connectSdk } from \"../../services/WalletService\";\nimport trans from \"../../translation/trans\";\nimport { Reducers } from \"../reducers\";\nimport { setProposals, setProposalsExpiredMarkets, setProposalsHasMore, setProposalsLoading } from \"./proposals\";\n\nexport function createProposal(values: ProposalFormValues) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        const sdk = await connectSdk();\n        \n        if (values.type === ProposalKindType.ResoluteMarket) {\n            const tokenMetadata = await sdk.getTokenMetadata(values.resoluteMarket.collateralTokenId);\n            const percentagesInToken = percentagesToDenom(values.resoluteMarket.payoutNumerators, tokenMetadata.decimals);\n\n            contract.createResoluteMarketProposal(\n                trans('proposal.resoluteMarket.description', {\n                    description: values.resoluteMarket.marketDescription,\n                }),\n                values.resoluteMarket.marketId, \n                values.resoluteMarket.isInvalidMarket ? undefined : percentagesInToken\n            );\n        } else if (values.type === ProposalKindType.NewCouncil) {\n            contract.createNewCouncilProposal(values.newCouncil.description, values.newCouncil.accountId);\n        } else if (values.type === ProposalKindType.AddTokenWhitelist) {\n            contract.createAddTokenToWhitelistProposal(values.addTokenWhitelist.description, values.addTokenWhitelist.accountId);\n        }\n    }\n}\n\nexport function loadProposals(reset = false) {\n    return async (dispatch: Function, getState: () => Reducers) => {\n        const contract = await createDaoContract();\n        const limit = 1000;\n        \n        if (reset) {\n            dispatch(setProposals([]))\n        }\n        \n        dispatch(setProposalsLoading(true));\n        \n        const state = getState();\n        const currentLoadedProposals = state.proposals.proposals;\n        const offset = currentLoadedProposals.length.toString();\n        const proposals = await contract.getProposals(offset, limit.toString());\n\n        if (proposals.length === limit) {\n            dispatch(setProposalsHasMore(true));\n        } else {\n            dispatch(setProposalsHasMore(false));\n        }\n\n        dispatch(setProposals([\n            ...state.proposals.proposals,\n            ...proposals,\n        ]));\n        dispatch(setProposalsLoading(false));\n    }\n}\n\nexport function loadExpiredMarkets() {\n    return async (dispatch: Function) => {\n        const markets = await getExpiredMarkets();\n        dispatch(setProposalsExpiredMarkets(markets));\n    }\n}\n\nexport function voteYes(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.vote(proposalId, 'Yes');\n    }\n}\n\nexport function voteNo(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.vote(proposalId, 'No');\n    }\n}\n\nexport function finalizeProposal(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.finalize(proposalId);\n    }\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProposalsOverview from '../../containers/ProposalsOverview';\nimport { Proposal } from '../../models/Proposal';\nimport { createProposal, finalizeProposal, loadExpiredMarkets, loadProposals, voteNo, voteYes } from '../../redux/proposals/proposalsActions';\nimport { Reducers } from '../../redux/reducers';\nimport { ProposalFormValues } from '../../services/ProposalsService';\n\n\nexport default function ProposalsConnector() {\n    const dispatch = useDispatch();\n    const proposals = useSelector((store: Reducers) => store.proposals.proposals);\n    const hasMoreProposals = useSelector((store: Reducers) => store.proposals.hasMoreProposals);\n    const markets = useSelector((store: Reducers) => store.proposals.expiredMarkets);\n    const loggedInAccount = useSelector((store: Reducers) => store.account.account);\n\n    useEffect(() => {\n        dispatch(loadProposals(true));\n        dispatch(loadExpiredMarkets());\n    }, [dispatch]);\n    \n    function handleSubmit(values: ProposalFormValues) {\n        dispatch(createProposal(values));\n    }\n\n    function handleYesClick(proposal: Proposal, id: number) {\n        dispatch(voteYes(id.toString()));\n    }\n\n    function handleNoClick(proposal: Proposal, id: number) {\n        dispatch(voteNo(id.toString()));\n    }\n\n    function handleFinalizeClick(proposal: Proposal, id: number) {\n        dispatch(finalizeProposal(id.toString()));\n    }\n\n    function handleRequestMoreProposals() {\n        console.log('More!');\n        dispatch(loadProposals());\n    }\n\n    return (\n        <ProposalsOverview\n            onProposalSubmit={handleSubmit} \n            proposals={proposals}\n            markets={markets}\n            onYesClick={handleYesClick}\n            onNoClick={handleNoClick}\n            onFinalizeClick={handleFinalizeClick}\n            hasMoreProposals={hasMoreProposals}\n            onRequestMoreProposals={handleRequestMoreProposals}\n            loggedInAccount={loggedInAccount}\n        />\n    );\n}","import * as Router from 'react-router';\nimport CouncilPage from './pages/CouncilPage';\nimport HomePage from './pages/HomePage';\n\ninterface RouteProps extends Router.RouteProps {\n    inNavigation: boolean;\n    key: string;\n    label: string;\n    icon?: string;\n}\n\nexport const routePaths = {\n    root: () => '/',\n    council: () => '/council',\n}\n\nexport const routes: RouteProps[] = [\n    {\n        component: HomePage,\n        exact: true,\n        inNavigation: false,\n        key: 'home',\n        label: 'Home',\n        path: routePaths.root(),\n    },\n    {\n        component: CouncilPage,\n        exact: true,\n        inNavigation: false,\n        key: 'council',\n        label: 'Council',\n        path: routePaths.council(),\n    },\n];\n","import React from 'react';\nimport ProposalsConnector from '../../connectors/ProposalsConnector';\nimport Page from '../../containers/Page';\nimport trans from '../../translation/trans';\n\n\nexport default function HomePage() {\n    return (\n        <Page>\n            <h1>{trans('home.title')}</h1>\n            <ProposalsConnector />\n        </Page>\n    );\n}","import React from 'react';\nimport CouncilConnector from '../../connectors/CouncilConnector';\nimport Page from '../../containers/Page';\nimport trans from '../../translation/trans';\n\n\nexport default function CouncilPage() {\n    return (\n        <Page>\n            <h1>{trans('council.title')}</h1>\n            \n            <CouncilConnector />\n        </Page>\n    );\n}","import React, { ReactElement } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { routes } from './routes';\n\nexport default function App() {\n    return (\n        <Switch>\n            {routes.map((route): ReactElement => <Route {...route} key={route.key} />)}\n        </Switch>\n    );\n}","import { combineReducers } from 'redux';\n\nimport account, { AccountState } from './account/account';\nimport proposals, { ProposalsState } from './proposals/proposals';\nimport council, { CouncilState } from './council/council';\nimport dao, { DaoState } from './dao/dao';\n\nexport interface Reducers {\n    account: AccountState;\n    proposals: ProposalsState;\n    council: CouncilState;\n    dao: DaoState;\n}\n\nexport default combineReducers<Reducers>({\n    account,\n    council,\n    proposals,\n    dao,\n});\n","import {\n    applyMiddleware,\n    CombinedState,\n    createStore,\n    Store,\n    StoreEnhancer,\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport reducers, { Reducers } from './reducers';\n\nconst createEnhancer = (): StoreEnhancer => (process.env.REACT_APP_APP_ENV !== 'production'\n    ? composeWithDevTools(applyMiddleware(thunk))\n    : applyMiddleware(thunk)\n);\n\nexport default function configureStore(preloadedState: Record<string, any> = {}): Store<CombinedState<Reducers>> {\n    const enhancer = createEnhancer();\n    return createStore(reducers, preloadedState, enhancer);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { StylesProvider } from '@material-ui/core/styles';\n\n\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nimport './styles/global.module.scss';\nimport configureStore from './redux/store';\n\nconst store = configureStore({});\n\nReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <StylesProvider injectFirst>\n          <App />\n        </StylesProvider>\n      </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__1vav1\",\"page__body\":\"Page_page__body__3V8v2\",\"page__body--large\":\"Page_page__body--large__27pTP\",\"page__body--unrestricted\":\"Page_page__body--unrestricted__3wRih\"};"],"sourceRoot":""}