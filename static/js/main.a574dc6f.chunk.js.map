{"version":3,"sources":["compositions/Dialog/Dialog.module.scss","components/Button/Button.module.scss","components/OptionSwitch/OptionSwitch.module.scss","containers/CouncilOverview/CouncilOverview.tsx","services/WalletService.ts","config.ts","services/contract/DaoContract.ts","redux/council/council.ts","connectors/CouncilConnector/CouncilConnector.tsx","redux/council/councilActions.ts","containers/Footer/Footer.tsx","translation/trans.ts","containers/Menu/Menu.tsx","redux/account/account.ts","services/AccountService.ts","redux/dao/dao.ts","connectors/MenuConnector/MenuConnector.tsx","redux/account/accountActions.ts","redux/dao/daoActions.ts","containers/Page/Page.tsx","components/Button/Button.tsx","compositions/Dialog/Dialog.tsx","models/Proposal.ts","components/OptionSwitch/OptionSwitch.tsx","containers/ProposalDialog/proposalsForms/ResoluteMarketForm/ResoluteMarketForm.tsx","containers/ProposalDialog/ProposalDialog.tsx","containers/ProposalDialog/services/createDefaultProposalFormValues.ts","containers/ProposalDialog/services/createDefaultResoluteMarketFormValues.ts","containers/ProposalInfo/ProposalInfo.tsx","containers/ProposalsOverview/ProposalsOverview.tsx","models/Market.ts","services/GraphQLService.ts","services/MarketService.ts","services/ProposalsService.ts","redux/proposals/proposals.ts","connectors/ProposalsConnector/ProposalsConnector.tsx","redux/proposals/proposalsActions.ts","routes.ts","pages/HomePage/HomePage.tsx","pages/CouncilPage/CouncilPage.tsx","App.tsx","redux/reducers.ts","redux/store.ts","index.tsx","containers/Page/Page.module.scss"],"names":["module","exports","CouncilOverview","council","map","member","nearInstance","walletConnection","NULL_CONTRACT","MAX_GAS","BN","STORAGE_BASE","getNetworkConfig","networkName","nodeUrl","networkId","contractName","walletUrl","initialBalance","connectNear","a","networkConfig","connect","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","connectWallet","near","WalletConnection","daoInstance","DaoContract","account","contract","this","Contract","process","viewMethods","changeMethods","get_council","result","get_bond","from_index","limit","get_proposals","description","marketId","payoutNumerator","add_proposal","proposal","kind","market_id","payout_numerator","type","proposalId","vote","id","finalize","createDaoContract","wallet","councilSlice","createSlice","initialState","loading","errors","name","reducers","setCouncil","state","action","payload","setCouncilLoading","setCouncilErrors","actions","CouncilConnector","dispatch","useDispatch","useSelector","store","useEffect","getCouncil","Footer","trans","key","attributes","uppercaseFirstLetter","translations","console","info","text","resultWithAttributes","label","options","replace","word","undefined","replaceAttributes","charAt","toUpperCase","substring","Menu","onLoginClick","onLogoutClick","onClick","accountId","to","routePaths","root","accountSlice","setAccount","setAccountLoading","setAccountErrors","signUserIn","requestSignIn","getAccountInfo","connectedWallet","isSignedIn","nearAccount","getAccountBalance","available","balance","signUserOut","signOut","daoSlice","setDaoInfo","daoInfo","setDaoLoading","setDaoErrors","MenuConnector","accountInfo","error","getBond","bond","handleLoginClick","useCallback","handleLogoutClick","Page","children","hasNavigation","hasFooter","size","className","bodyClassName","pageBodyClassName","classnames","styles","page__body","page","Button","props","s","button","Dialog","title","open","onRequestClose","onSubmitClick","classes","paper","DialogTitle","DialogContent","DialogActions","cancelButton","confirmButton","ProposalFormKind","ProposalKindType","ProposalStatus","OptionSwitch","labelA","labelB","onChange","value","Switch","_","checked","ResoluteMarketForm","values","markets","selectedMarket","find","market","Select","event","target","marketDescription","MenuItem","extraInfo","isInvalidMarket","isInvalid","outcomeTags","outcome","index","TextField","helperText","currentTarget","ProposalDialog","onSubmit","useState","ResoluteMarket","setType","resoluteMarket","formValues","setFormValues","ProposalInfo","onNoClick","onYesClick","onFinalizeClick","date","Date","vote_period_end","Card","CardActionArea","window","CardContent","Typography","gutterBottom","variant","component","JSON","stringify","status","creator","proposer","toString","CardActions","Vote","amount","vote_yes","vote_no","Success","ProposalsOverview","onProposalSubmit","proposals","isOpen","setOpen","transformToMarketViewModel","graphResponse","outcome_tags","extra_info","cache","InMemoryCache","link","createHttpLink","uri","graphqlClient","ApolloClient","defaultOptions","watchQuery","fetchPolicy","getExpiredMarkets","query","gql","marketsData","data","items","percentagesToDenom","percentages","hunderdPercent","Big","pow","num","mul","toFixed","proposalsSlice","expiredMarkets","setProposals","setProposalsLoading","setProposalsErrors","setProposalsExpiredMarkets","ProposalsConnector","getProposals","rawValue","percentagePayout","split","v","Number","trim","percentagesInToken","createResoluteMarketProposal","createProposal","routes","exact","inNavigation","path","App","route","combineReducers","dao","createEnhancer","REACT_APP_APP_ENV","composeWithDevTools","applyMiddleware","thunk","preloadedState","enhancer","createStore","configureStore","ReactDOM","render","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.a574dc6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Dialog_paper__XrzDE\",\"cancelButton\":\"Dialog_cancelButton__3SRaV\",\"confirmButton\":\"Dialog_confirmButton__OGdmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Lf63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"OptionSwitch_root__URwjr\"};","import React from 'react';\n\ninterface Props {\n    council: string[];\n}\n\nexport default function CouncilOverview({\n    council,\n}: Props) {\n    return (\n        <section>\n            {council.map((member) => (\n                <div key={member}>{member}</div>\n            ))}\n        </section>\n    );\n}","import {\n    Near,\n    connect,\n    WalletConnection,\n    keyStores,\n} from \"near-api-js\";\n\nimport { NULL_CONTRACT } from '../config';\n\nexport interface ConnectConfig {\n    accountId?: string;\n    nearInstance?: Near,\n    walletInstance?: WalletConnection,\n    customNodeUrl?: string\n}\n\ninterface NetworkConfig {\n    networkId: string,\n    nodeUrl: string,\n    contractName: null,\n    walletUrl: string,\n    initialBalance: string\n}\n\nexport function getNetworkConfig(networkName: string, nodeUrl?: string): NetworkConfig {\n    let network: NetworkConfig;\n\n    switch (networkName) {\n        default:\n            network = {\n                networkId: 'testnet',\n                nodeUrl: nodeUrl || 'https://rpc.testnet.near.org',\n                contractName: null,\n                walletUrl: 'https://wallet.testnet.near.org',\n                initialBalance: \"100000000\"\n            };\n    }\n\n    return network;\n}\n\nlet nearInstance: Near;\n\nexport async function connectNear() {\n    if (nearInstance) {\n        return nearInstance;\n    }\n\n    const networkConfig = getNetworkConfig('testnet');\n    nearInstance = await connect({\n        ...networkConfig,\n        deps: {\n            keyStore: new keyStores.BrowserLocalStorageKeyStore(),\n        }\n    });\n\n    return nearInstance;\n}\n\nlet walletConnection: WalletConnection;\n\nexport async function connectWallet(): Promise<WalletConnection> {\n    if (walletConnection) {\n        return walletConnection;\n    }\n\n    const near = await connectNear();\n\n    walletConnection = new WalletConnection(near, NULL_CONTRACT);\n    return walletConnection;\n}\n","import BN from \"bn.js\";\n\nexport const API_URL = process.env.REACT_APP_API_URL || '';\nexport const NULL_CONTRACT = 'null_contract.flux-dev';\nexport const MAX_GAS = new BN(\"300000000000000\");\nexport const DAO_ACCOUNT_ID = process.env.REACT_APP_DAO_ACCOUNT_ID || '';\nexport const STORAGE_BASE = new BN('30000000000000000000000');\nexport const FLUX_MARKET_DETAIL_URL = process.env.REACT_APP_FLUX_MARKET_DETAIL_URL || '';","import BN from \"bn.js\";\nimport { Account, Contract } from \"near-api-js\";\nimport { DAO_ACCOUNT_ID, MAX_GAS, STORAGE_BASE } from \"../../config\";\nimport { Proposal } from \"../../models/Proposal\";\nimport { connectWallet } from \"../WalletService\";\n\nclass DaoContract {\n    contract: Contract;\n\n    constructor(account: Account) {\n        this.contract = new Contract(account, DAO_ACCOUNT_ID, {\n            viewMethods: ['get_council', 'get_bond', 'get_proposals'],\n            changeMethods: ['add_proposal', 'vote', 'finalize'],\n        });\n    }\n\n    async getCouncil(): Promise<string[]> {\n        // @ts-ignore\n        const result = await this.contract.get_council({ a: 1 });\n\n        return result;\n    }\n\n    async getBond(): Promise<string> {\n        // @ts-ignore\n        const result = await this.contract.get_bond({ a: 1 });\n\n        return result;\n    }\n\n    async getProposals(from_index = \"0\", limit = \"1000\"): Promise<Proposal[]> {\n        // @ts-ignore\n        const result = await this.contract.get_proposals({ \n            from_index,\n            limit,\n        });\n\n        return result;\n    }\n\n    async createResoluteMarketProposal(description: string, marketId: string, payoutNumerator?: string[]) {\n        // @ts-ignore\n        this.contract.add_proposal({\n            proposal: {\n                description,\n                kind: {\n                    market_id: marketId,\n                    payout_numerator: payoutNumerator,\n                    type: 'ResoluteMarket',\n                }\n            }\n        }, MAX_GAS, STORAGE_BASE);\n    }\n\n    vote(proposalId: string, vote: 'Yes' | 'No') {\n        // @ts-ignore\n        this.contract.vote({\n            id: proposalId,\n            vote,\n        }, MAX_GAS, new BN(0));\n    }\n\n    finalize(proposalId: string) {\n        // @ts-ignore\n        this.contract.finalize({\n            id: proposalId,\n        }, MAX_GAS, new BN(0));\n    }\n}\n\n\nlet daoInstance: DaoContract;\n\nexport default async function createDaoContract(): Promise<DaoContract> {\n    if (daoInstance) {\n        return daoInstance;\n    }\n\n    const wallet = await connectWallet();\n    daoInstance = new DaoContract(wallet.account());\n\n    return daoInstance;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type CouncilState = Readonly<{\n    council: string[];\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: CouncilState = {\n    council: [],\n    loading: false,\n    errors: [],\n};\n\nconst councilSlice = createSlice({\n    initialState,\n    name: 'council',\n    reducers: {\n        setCouncil(state: CouncilState, action: PayloadAction<string[]>): CouncilState {\n            return ({\n                ...state,\n                council: action.payload,\n            });\n        },\n        setCouncilLoading(state: CouncilState, action: PayloadAction<boolean>): CouncilState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setCouncilErrors(state: CouncilState, action: PayloadAction<string[]>): CouncilState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setCouncil,\n    setCouncilErrors,\n    setCouncilLoading,\n} = councilSlice.actions;\n\nexport default councilSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CouncilOverview from '../../containers/CouncilOverview';\nimport { loadCouncil } from '../../redux/council/councilActions';\nimport { Reducers } from '../../redux/reducers';\n\n\nexport default function CouncilConnector() {\n    const dispatch = useDispatch();\n    const council = useSelector((store: Reducers) => store.council.council);\n\n    useEffect(() => {\n        dispatch(loadCouncil());\n    }, []);\n\n    return (\n        <CouncilOverview council={council} />\n    );\n}","import createDaoContract from \"../../services/contract/DaoContract\";\nimport { setCouncil, setCouncilErrors, setCouncilLoading } from \"./council\"\n\nexport function loadCouncil() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setCouncilLoading(true));\n            const contract = await createDaoContract();\n            const council = await contract.getCouncil();\n            dispatch(setCouncil(council));\n            dispatch(setCouncilLoading(false));\n        } catch(error) {\n            dispatch(setCouncilErrors(error));\n            dispatch(setCouncilLoading(false));\n        }\n    }\n}","import React from 'react';\n\n\nexport default function Footer() {\n    return (\n        <footer>\n            \n        </footer>\n    );\n}","import translations from './lang/translations.eng.json';\n\ninterface Attributes {\n    [key: string]: string;\n}\n\nfunction replaceAttributes(label: string, options: Attributes = {}): string {\n    // Replaces any \":key\" with a value in the options\n    return label.replace(/:(\\w+)/gi, (word) => {\n        const key = word.replace(/^:/, '');\n\n        if (options[key] === undefined || options[key] === null) {\n            return '';\n        }\n\n        return options[key];\n    });\n}\n\nexport function ucFirstLetter(text: string): string {\n    return text.charAt(0).toUpperCase() + text.substring(1);\n}\n\n\nexport default function trans(key: string, attributes?: Attributes, uppercaseFirstLetter?: boolean): string {\n    // @ts-ignore\n    const result: string = translations[key];\n\n    if (!result) {\n        console.info('Transaltion not found for', key)\n        return key;\n    }\n\n    const resultWithAttributes = replaceAttributes(result, attributes);\n    return uppercaseFirstLetter ? ucFirstLetter(resultWithAttributes) : resultWithAttributes;\n}\n\nexport function booleanToYesNo(bool = false): string {\n    return bool ? trans('global.yes') : trans('global.no');\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Account } from '../../models/Account';\nimport { routePaths } from '../../routes';\nimport trans from '../../translation/trans';\n\ninterface Props {\n    onLoginClick: () => void;\n    onLogoutClick: () => void;\n    account: Account | null;\n}\n\nexport default function Menu({\n    onLoginClick,\n    onLogoutClick,\n    account,\n}: Props) {\n    return (\n        <section>\n            {!account && (\n                <button onClick={onLoginClick}>{trans('menu.login')}</button>\n            )}\n\n            {account && (\n                <>\n                    <span>{trans('menu.loggedInAs', { accountId: account.accountId })}</span>\n                    <button onClick={onLogoutClick}>{trans('menu.logout')}</button>\n                </>\n            )}\n\n            <Link to={routePaths.root()}>{trans('menu.item.home')}</Link>\n            <Link to={routePaths.council()}>{trans('menu.item.council')}</Link>\n        </section>\n    );\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Account } from '../../models/Account';\n\nexport type AccountState = Readonly<{\n    account: Account | null;\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: AccountState = {\n    account: null,\n    loading: false,\n    errors: [],\n};\n\nconst accountSlice = createSlice({\n    initialState,\n    name: 'account',\n    reducers: {\n        setAccount(state: AccountState, action: PayloadAction<Account | null>): AccountState {\n            return ({\n                ...state,\n                account: action.payload,\n            });\n        },\n        setAccountLoading(state: AccountState, action: PayloadAction<boolean>): AccountState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setAccountErrors(state: AccountState, action: PayloadAction<string[]>): AccountState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setAccount,\n    setAccountErrors,\n    setAccountLoading,\n} = accountSlice.actions;\n\nexport default accountSlice.reducer;\n","import { NULL_CONTRACT } from \"../config\";\nimport { Account } from \"../models/Account\";\nimport trans from \"../translation/trans\";\nimport { connectWallet } from \"./WalletService\";\n\nexport async function signUserIn() {\n    const connectedWallet = await connectWallet();\n\n    connectedWallet.requestSignIn(NULL_CONTRACT, trans('global.appName'));\n}\n\nexport async function getAccountInfo(): Promise<Account | null> {\n    const connectedWallet = await connectWallet();\n\n    if (!connectedWallet.isSignedIn()) {\n        return null;\n    }\n\n    const nearAccount = connectedWallet.account();\n\n    return {\n        accountId: nearAccount.accountId,\n        balance: (await nearAccount.getAccountBalance()).available,\n    };\n}\n\nexport async function signUserOut() {\n    const connectedWallet = await connectWallet();\n    connectedWallet.signOut();\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DaoInfo } from '../../models/DaoInfo';\n\nexport type DaoState = Readonly<{\n    daoInfo?: DaoInfo;\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: DaoState = {\n    loading: false,\n    errors: [],\n};\n\nconst daoSlice = createSlice({\n    initialState,\n    name: 'daoInfo',\n    reducers: {\n        setDaoInfo(state: DaoState, action: PayloadAction<DaoInfo>): DaoState {\n            return ({\n                ...state,\n                daoInfo: action.payload,\n            });\n        },\n        setDaoLoading(state: DaoState, action: PayloadAction<boolean>): DaoState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setDaoErrors(state: DaoState, action: PayloadAction<string[]>): DaoState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setDaoErrors,\n    setDaoInfo,\n    setDaoLoading,\n} = daoSlice.actions;\n\nexport default daoSlice.reducer;\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Menu from '../../containers/Menu';\nimport { getAccount, signIn, signOut } from '../../redux/account/accountActions';\nimport { loadDaoInfo } from '../../redux/dao/daoActions';\nimport { Reducers } from '../../redux/reducers';\n\n\nexport default function MenuConnector() {\n    const dispatch = useDispatch();\n    const accountInfo = useSelector((store: Reducers) => store.account.account);\n\n    useEffect(() => {\n        if (!accountInfo) {\n            dispatch(getAccount());\n        }\n\n        dispatch(loadDaoInfo());\n    }, [dispatch, accountInfo]);\n\n    const handleLoginClick = useCallback(() => {\n        dispatch(signIn());\n    }, []);\n\n    const handleLogoutClick = useCallback(() => {\n        dispatch(signOut());\n    }, []);\n\n    return (\n        <Menu \n            onLoginClick={handleLoginClick} \n            onLogoutClick={handleLogoutClick}\n            account={accountInfo}\n        />\n    );\n}","import { setAccount, setAccountLoading } from \"./account\";\nimport { signUserIn, getAccountInfo, signUserOut } from '../../services/AccountService';\n\nexport function signIn() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setAccountLoading(true));\n            await signUserIn();\n            dispatch(setAccountLoading(false));\n        } catch (error) {\n            dispatch(setAccountLoading(false));\n            console.error('[signIn]', error);\n        }\n    }\n}\n\nexport function getAccount() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setAccountLoading(true));\n            const account = await getAccountInfo();\n            dispatch(setAccount(account));\n            dispatch(setAccountLoading(false));\n        } catch (error) {\n            dispatch(setAccountLoading(false));\n            console.error('[getAccount]', error);\n        }\n    }\n}\n\nexport function signOut() {\n    return async (dispatch: Function) => {\n        await signUserOut();\n        dispatch(setAccount(null));\n    }\n}\n","import createDaoContract from \"../../services/contract/DaoContract\";\nimport { setDaoErrors, setDaoInfo, setDaoLoading } from \"./dao\"\n\nexport function loadDaoInfo() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setDaoLoading(true));\n            const contract = await createDaoContract();\n            const bond = await contract.getBond();\n\n            dispatch(setDaoInfo({\n                bond,\n            }));\n    \n            dispatch(setDaoLoading(false));\n        } catch (error) {\n            dispatch(setDaoErrors(error));\n            dispatch(setDaoLoading(false));\n        }\n    }\n}","import React, { PropsWithChildren, ReactElement } from \"react\";\nimport classnames from 'classnames';\n\nimport Footer from \"../Footer\";\nimport MenuConnector from \"../../connectors/MenuConnector\";\n\nimport styles from './Page.module.scss';\ninterface Props {\n    className?: string;\n    bodyClassName?: string;\n    hasNavigation?: boolean;\n    hasFooter?: boolean;\n    size?: 'large' | 'medium' | 'unrestricted';\n}\n\nexport default function Page({\n    children,\n    hasNavigation = true,\n    hasFooter = true,\n    size = 'medium',\n    className = '',\n    bodyClassName = '',\n}: PropsWithChildren<Props>): ReactElement {\n    const pageBodyClassName = classnames(styles.page__body, bodyClassName, {\n        [styles['page__body--large']]: size === 'large',\n        [styles['page__body--unrestricted']]: size === 'unrestricted',\n    });\n\n    return (\n        <div className={`${styles.page} ${className}`}>\n            {/* Normally don't put connectors in containers.. */}\n            {hasNavigation && <MenuConnector />}\n            <main className={pageBodyClassName}>\n                {children}\n            </main>\n            {hasFooter && <Footer />}\n        </div>\n    );\n}\n","import React, { FormEvent, ReactNode } from 'react';\nimport { default as MuiButton } from '@material-ui/core/Button';\n\nimport s from './Button.module.scss';\n\ninterface ButtonProps {\n    children: ReactNode | string;\n    className?: string;\n    onClick?: (event: FormEvent<HTMLButtonElement>) => void;\n    variant?: \"text\" | \"outlined\" | \"contained\";\n    disabled?: boolean;\n};\n\nexport default function Button({\n    className = '',\n    children,\n    ...props\n}: ButtonProps) {\n    return (\n        <MuiButton {...props} className={`${s.button} ${className}`}>{children}</MuiButton>\n    );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { default as MuiDialog } from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '../../components/Button';\n\nimport s from './Dialog.module.scss';\nimport trans from '../../translation/trans';\n\ninterface Props {\n    title: string;\n    open: boolean;\n    onRequestClose: () => void;\n    onSubmitClick: () => void;\n}\n\nexport default function Dialog({\n    title,\n    children,\n    open,\n    onRequestClose,\n    onSubmitClick,\n}: PropsWithChildren<Props>) {\n    return (\n        <MuiDialog open={open} classes={{ paper: s.paper }}>\n            <DialogTitle>\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                {children}\n            </DialogContent>\n            <DialogActions>\n                <Button className={s.cancelButton} onClick={onRequestClose}>\n                    {trans('global.action.cancel')}\n                </Button>\n                <Button className={s.confirmButton} onClick={onSubmitClick}>\n                    {trans('global.action.submit')}\n                </Button>\n            </DialogActions>\n        </MuiDialog>\n    );\n}\n","import { Vote } from \"./Vote\"\n\nexport enum ProposalFormKind {\n    ResoluteMarket\n}\n\nexport enum ProposalKindType {\n    ResoluteMarket = 'ResoluteMarket'\n}\n\nexport enum ProposalStatus {\n    /// Proposal is in active voting stage.\n    Vote = 'Vote',\n    /// Proposal has successfully passed.\n    Success = 'Success',\n    /// Proposal was rejected by the vote.\n    Reject = 'Reject',\n    /// Proposal is finalized\n    Finalized = 'Finalized',\n    /// Proposal is rejected\n    Rejected = 'Rejected'\n}\n\nexport interface Proposal {\n    status: ProposalStatus;\n    proposer: string;\n    description: string;\n    kind: {\n        type: ProposalKindType,\n    };\n    last_vote: number;\n    vote_period_end: number;\n    vote_yes: number;\n    vote_no: number;\n    votes: Map<string, Vote>;\n}","import React, { ReactElement } from 'react';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport s from './OptionSwitch.module.scss';\n\ninterface Props {\n    labelA: string;\n    labelB: string;\n    onChange: (checked: boolean) => void;\n    value?: boolean;\n}\n\nexport default function OptionSwitch({\n    labelA,\n    labelB,\n    onChange,\n    value,\n}: Props): ReactElement {\n    return (\n        <span className={s.root}>\n            <span>{labelA}</span>\n            <Switch value={value} onChange={(_, checked) => onChange(checked)} />\n            <span>{labelB}</span>\n        </span>\n    );\n}\n","import MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport React, { ChangeEvent } from 'react';\nimport OptionSwitch from '../../../../components/OptionSwitch';\nimport { MarketViewModel } from '../../../../models/Market';\nimport trans from '../../../../translation/trans';\nimport { ResoluteMarketFormValues } from '../../services/createDefaultResoluteMarketFormValues';\n\ninterface Props {\n    onChange: (values: ResoluteMarketFormValues) => void;\n    values: ResoluteMarketFormValues;\n    markets: MarketViewModel[];\n}\n\nexport default function ResoluteMarketForm({\n    onChange,\n    values,\n    markets,\n}: Props) {\n    function handleMarketTypeChange(isInvalid: boolean) {\n        onChange({\n            ...values,\n            isInvalidMarket: isInvalid,\n        });\n    }\n\n    function handleMarketIdChange(event: ChangeEvent<{ name?: string, value: unknown }>) {\n        const market = markets.find(market => market.id === event.target.value);\n\n        onChange({\n            ...values,\n            marketId: market?.id || '',\n            marketDescription: market?.description || '',\n        });\n    }\n\n    function handlePayoutNumeratorChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            payoutNumerator: event.currentTarget.value,\n        });\n    }\n\n    const selectedMarket = markets.find(market => market.id === values.marketId);\n\n    return (\n        <div>\n            <div>\n                <Select label={trans('resoluteMarketForm.input.marketId')} value={values.marketId} onChange={handleMarketIdChange}>\n                    {markets.map((market) => (\n                        <MenuItem key={market.id} value={market.id}>{market.id} - {market.description}</MenuItem>\n                    ))}\n                </Select>\n            </div>\n            <div>\n                <br />\n                {selectedMarket?.extraInfo}\n            </div>\n            <OptionSwitch\n                labelA={trans('resoluteMarketForm.input.validMarket')}\n                labelB={trans('resoluteMarketForm.input.invalidMarket')} \n                value={values.isInvalidMarket}\n                onChange={handleMarketTypeChange}\n            />\n            <div>\n                {!values.isInvalidMarket && (\n                    <>\n                        <div>\n                            {selectedMarket?.outcomeTags.map((outcome, index) => (\n                                <div key={index}>\n                                    <span>{index}</span>\n                                    <span>{outcome}</span>\n                                </div>\n                            ))}\n                        </div>\n                        <TextField\n                            helperText={trans('resoluteMarketForm.input.payoutNumeratorHelper')}\n                            label={trans('resoluteMarketForm.input.payoutNumerator')} \n                            onChange={handlePayoutNumeratorChange}\n                            value={values.payoutNumerator}\n                        />\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent, useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Dialog from '../../compositions/Dialog';\nimport trans from '../../translation/trans';\nimport ResoluteMarketForm from './proposalsForms/ResoluteMarketForm';\nimport { ProposalFormKind } from '../../models/Proposal';\nimport createDefaultProposalFormValues from './services/createDefaultProposalFormValues';\nimport { ResoluteMarketFormValues } from './services/createDefaultResoluteMarketFormValues';\nimport { ProposalFormValues } from '../../services/ProposalsService';\nimport { MarketViewModel } from '../../models/Market';\n\ninterface Props {\n    open: boolean;\n    markets: MarketViewModel[];\n    onRequestClose: () => void;\n    onSubmit: (value: ProposalFormValues) => void;\n}\n\nexport default function ProposalDialog({\n    open,\n    markets,\n    onRequestClose,\n    onSubmit,\n}: Props) {\n    const [type, setType] = useState(ProposalFormKind.ResoluteMarket);\n    const [formValues, setFormValues] = useState(createDefaultProposalFormValues());\n\n    function handleSelectChange(event: ChangeEvent<{name?: string, value: unknown}>) {\n        setType(event.currentTarget.value as ProposalFormKind);\n    }\n\n    function handleResoluteMarketChange(resoluteMarket: ResoluteMarketFormValues) {\n        setFormValues({\n            ...formValues,\n            resoluteMarket,\n        });\n    }\n\n    return (\n        <Dialog \n            open={open} \n            title={trans('proposalDialog.title')}\n            onSubmitClick={() => onSubmit(formValues)}\n            onRequestClose={onRequestClose}\n        >\n            <Select value={type} onChange={handleSelectChange}>\n                <MenuItem value={ProposalFormKind.ResoluteMarket}>{trans('proposalDialog.types.resoluteMarket')}</MenuItem>\n            </Select>\n\n            {type === ProposalFormKind.ResoluteMarket && (\n                <ResoluteMarketForm\n                    markets={markets}\n                    values={formValues.resoluteMarket}\n                    onChange={handleResoluteMarketChange}\n                />\n            )}\n        </Dialog>\n    );\n}","import { ProposalFormKind } from \"../../../models/Proposal\";\nimport { ProposalFormValues } from \"../../../services/ProposalsService\";\nimport createDefaultResoluteMarketFormValues from \"./createDefaultResoluteMarketFormValues\";\n\nexport default function createDefaultProposalFormValues(): ProposalFormValues {\n    return {\n        resoluteMarket: createDefaultResoluteMarketFormValues(),\n        type: ProposalFormKind.ResoluteMarket,\n    }\n}","export interface ResoluteMarketFormValues {\n    isInvalidMarket: boolean;\n    marketId: string;\n    marketDescription: string;\n    payoutNumerator: string;\n}\n\nexport default function createDefaultResoluteMarketFormValues(): ResoluteMarketFormValues {\n    return {\n        isInvalidMarket: false,\n        marketId: '',\n        marketDescription: '',\n        payoutNumerator: '',\n    };\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Proposal, ProposalKindType, ProposalStatus } from '../../models/Proposal';\nimport Button from '../../components/Button';\nimport trans from '../../translation/trans';\nimport { FLUX_MARKET_DETAIL_URL } from '../../config';\n\ninterface Props {\n    proposal: Proposal;\n    onYesClick: () => void;\n    onNoClick: () => void;\n    onFinalizeClick: () => void;\n}\n\nexport default function ProposalInfo({\n    proposal,\n    onNoClick,\n    onYesClick,\n    onFinalizeClick,\n}: Props) {\n    const date = new Date(proposal.vote_period_end / 1000000);\n\n    function handleCardClick() {\n        if (proposal.kind.type === ProposalKindType.ResoluteMarket) {\n            // @ts-ignore\n            window.open(`${FLUX_MARKET_DETAIL_URL}${proposal.kind.market_id}`, '_blank');\n        }\n    }\n\n    return (\n        <Card>\n            <CardActionArea onClick={handleCardClick}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {proposal.description}\n                    </Typography>\n                    <pre>\n                        {JSON.stringify(proposal.kind, null, 4)}\n                    </pre>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.status', {\n                            status: proposal.status\n                        })}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.creator', {\n                            creator: proposal.proposer\n                        })}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.votePeriodEnd', {\n                            date: date.toString(),\n                        })}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                {proposal.status === ProposalStatus.Vote && (\n                    <>\n                        <Button onClick={onYesClick}>\n                            {trans('proposalInfo.action.voteYes', {\n                                amount: proposal.vote_yes.toString(),\n                            })}\n                        </Button>\n                        <Button onClick={onNoClick}>\n                            {trans('proposalInfo.action.voteNo', {\n                                amount: proposal.vote_no.toString(),\n                            })}\n                        </Button>\n                    </>\n                )}\n\n                {proposal.status === ProposalStatus.Success && (\n                    <Button onClick={onFinalizeClick}>\n                        {trans('proposalInfo.action.finalize')}\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    );\n}","import React, { useState } from 'react';\nimport { MarketViewModel } from '../../models/Market';\nimport { Proposal } from '../../models/Proposal';\nimport { ProposalFormValues } from '../../services/ProposalsService';\nimport trans from '../../translation/trans';\nimport ProposalDialog from '../ProposalDialog';\nimport ProposalInfo from '../ProposalInfo';\n\ninterface Props {\n    onProposalSubmit: (values: ProposalFormValues) => void;\n    proposals: Proposal[];\n    markets: MarketViewModel[];\n    onYesClick: (proposal: Proposal, id: number) => void;\n    onNoClick: (proposal: Proposal, id: number) => void;\n    onFinalizeClick: (proposal: Proposal, id: number) => void;\n}\n\n\nexport default function ProposalsOverview({\n    onProposalSubmit,\n    onNoClick,\n    onYesClick,\n    onFinalizeClick,\n    proposals,\n    markets,\n}: Props) {\n    const [isOpen, setOpen] = useState(false);\n\n    function onCreateClick() {\n        setOpen(true);\n    }\n\n    return (\n        <section>\n            <button onClick={onCreateClick}>{trans('proposalsOverview.create')}</button>\n\n            {proposals.map((proposal, index) => (\n                <ProposalInfo \n                    key={index}\n                    proposal={proposal}\n                    onNoClick={() => onNoClick(proposal, index)}\n                    onYesClick={() => onYesClick(proposal, index)}\n                    onFinalizeClick={() => onFinalizeClick(proposal, index)}\n                />\n            ))}\n\n            <ProposalDialog\n                markets={markets}\n                open={isOpen} \n                onRequestClose={() => setOpen(false)}\n                onSubmit={onProposalSubmit}\n            />\n        </section>\n    );\n}","export interface GraphMarketResponse {\n    description: string;\n    id: string;\n    outcome_tags: string[];\n    extra_info: string;\n}\n\nexport interface MarketViewModel {\n    id: string;\n    description: string;\n    outcomeTags: string[];\n    extraInfo: string;\n}\n\nexport function transformToMarketViewModel(\n    graphResponse: GraphMarketResponse,\n): MarketViewModel {\n    return {\n        id: graphResponse.id,\n        description: graphResponse.description,\n        outcomeTags: graphResponse.outcome_tags,\n        extraInfo: graphResponse.extra_info,\n    }\n}\n","import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { API_URL } from '../config';\n\nconst cache = new InMemoryCache();\nconst link = createHttpLink({\n    uri: API_URL,\n});\n\nexport const graphqlClient = new ApolloClient({\n    cache,\n    link,\n\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'cache-and-network',\n        }\n    }\n});\n","import { gql } from \"@apollo/client\";\nimport { GraphMarketResponse, MarketViewModel, transformToMarketViewModel } from \"../models/Market\";\nimport { graphqlClient } from \"./GraphQLService\";\n\nexport async function getExpiredMarkets(): Promise<MarketViewModel[]> {\n    try {\n        const result = await graphqlClient.query({\n            query: gql`\n                query ExiredMarkets {\n                    markets: getMarkets(filters: { expired: true, finalized: false }) {\n                        items {\n                            id\n                            description\n                            outcome_tags\n                            extra_info\n                        }\n                    }\n                }\n            `,\n        });\n\n        const marketsData: GraphMarketResponse[] = result.data.markets.items;\n        \n        return marketsData.map(market => transformToMarketViewModel(market));\n    } catch (error) {\n        console.error('[getExpiredMarkets]', error);\n        return [];\n    }\n}","import Big from 'big.js';\n\nimport { ResoluteMarketFormValues } from \"../containers/ProposalDialog/services/createDefaultResoluteMarketFormValues\";\nimport { ProposalFormKind } from \"../models/Proposal\";\n\nexport interface ProposalFormValues {\n    resoluteMarket: ResoluteMarketFormValues;\n    type: ProposalFormKind;\n}\n\nexport function fetchProposals() {\n    \n}\n\nexport function payoutNumeratorStringToPercentages(rawValue: string) {\n    return rawValue.split(' ').map(v => Number(v.trim()));\n}\n\nexport function percentagesToDenom(percentages: number[]) {\n    const hunderdPercent = new Big(10).pow(18);\n    return percentages.map(num => hunderdPercent.mul(num / 100).toFixed(0));\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { MarketViewModel } from '../../models/Market';\nimport { Proposal } from '../../models/Proposal';\n\nexport type ProposalsState = Readonly<{\n    proposals: Proposal[];\n    expiredMarkets: MarketViewModel[];\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: ProposalsState = {\n    proposals: [],\n    expiredMarkets: [],\n    loading: false,\n    errors: [],\n};\n\nconst proposalsSlice = createSlice({\n    initialState,\n    name: 'proposals',\n    reducers: {\n        setProposals(state: ProposalsState, action: PayloadAction<Proposal[]>): ProposalsState {\n            return ({\n                ...state,\n                proposals: action.payload,\n            });\n        },\n        setProposalsLoading(state: ProposalsState, action: PayloadAction<boolean>): ProposalsState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setProposalsErrors(state: ProposalsState, action: PayloadAction<string[]>): ProposalsState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n        setProposalsExpiredMarkets(state: ProposalsState, action: PayloadAction<MarketViewModel[]>): ProposalsState {\n            return ({\n                ...state,\n                expiredMarkets: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setProposals,\n    setProposalsLoading,\n    setProposalsErrors,\n    setProposalsExpiredMarkets,\n} = proposalsSlice.actions;\n\nexport default proposalsSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProposalsOverview from '../../containers/ProposalsOverview';\nimport { Proposal } from '../../models/Proposal';\nimport { createProposal, finalizeProposal, loadExpiredMarkets, loadProposals, voteNo, voteYes } from '../../redux/proposals/proposalsActions';\nimport { Reducers } from '../../redux/reducers';\nimport { ProposalFormValues } from '../../services/ProposalsService';\n\n\nexport default function ProposalsConnector() {\n    const dispatch = useDispatch();\n    const proposals = useSelector((store: Reducers) => store.proposals.proposals);\n    const markets = useSelector((store: Reducers) => store.proposals.expiredMarkets);\n\n    useEffect(() => {\n        dispatch(loadProposals());\n        dispatch(loadExpiredMarkets());\n    }, [dispatch]);\n    \n    function handleSubmit(values: ProposalFormValues) {\n        dispatch(createProposal(values));\n    }\n\n    function handleYesClick(proposal: Proposal, id: number) {\n        dispatch(voteYes(id.toString()));\n    }\n\n    function handleNoClick(proposal: Proposal, id: number) {\n        dispatch(voteNo(id.toString()));\n    }\n\n    function handleFinalizeClick(proposal: Proposal, id: number) {\n        dispatch(finalizeProposal(id.toString()));\n    }\n\n    return (\n        <ProposalsOverview\n            onProposalSubmit={handleSubmit} \n            proposals={proposals}\n            markets={markets}\n            onYesClick={handleYesClick}\n            onNoClick={handleNoClick}\n            onFinalizeClick={handleFinalizeClick}\n        />\n    );\n}","import { ProposalFormKind } from \"../../models/Proposal\";\nimport createDaoContract from \"../../services/contract/DaoContract\";\nimport { getExpiredMarkets } from \"../../services/MarketService\";\nimport { payoutNumeratorStringToPercentages, percentagesToDenom, ProposalFormValues } from \"../../services/ProposalsService\";\nimport trans from \"../../translation/trans\";\nimport { setProposals, setProposalsExpiredMarkets, setProposalsLoading } from \"./proposals\";\n\nexport function createProposal(values: ProposalFormValues) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        \n        if (values.type === ProposalFormKind.ResoluteMarket) {\n            const percentagePayout = payoutNumeratorStringToPercentages(values.resoluteMarket.payoutNumerator);\n            const percentagesInToken = percentagesToDenom(percentagePayout);\n\n            contract.createResoluteMarketProposal(\n                trans('proposal.resoluteMarket.description', {\n                    description: values.resoluteMarket.marketDescription,\n                }),\n                values.resoluteMarket.marketId, \n                values.resoluteMarket.isInvalidMarket ? undefined : percentagesInToken\n            );\n        }\n    }\n}\n\nexport function loadProposals() {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n\n        dispatch(setProposalsLoading(true));\n\n        const proposals = await contract.getProposals();\n\n        dispatch(setProposals(proposals));\n        dispatch(setProposalsLoading(false));\n    }\n}\n\nexport function loadExpiredMarkets() {\n    return async (dispatch: Function) => {\n        const markets = await getExpiredMarkets();\n        dispatch(setProposalsExpiredMarkets(markets));\n    }\n}\n\nexport function voteYes(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.vote(proposalId, 'Yes');\n    }\n}\n\nexport function voteNo(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.vote(proposalId, 'No');\n    }\n}\n\nexport function finalizeProposal(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.finalize(proposalId);\n    }\n}","import * as Router from 'react-router';\nimport CouncilPage from './pages/CouncilPage';\nimport HomePage from './pages/HomePage';\n\ninterface RouteProps extends Router.RouteProps {\n    inNavigation: boolean;\n    key: string;\n    label: string;\n    icon?: string;\n}\n\nexport const routePaths = {\n    root: () => '/',\n    council: () => '/council',\n}\n\nexport const routes: RouteProps[] = [\n    {\n        component: HomePage,\n        exact: true,\n        inNavigation: false,\n        key: 'home',\n        label: 'Home',\n        path: routePaths.root(),\n    },\n    {\n        component: CouncilPage,\n        exact: true,\n        inNavigation: false,\n        key: 'council',\n        label: 'Council',\n        path: routePaths.council(),\n    },\n];\n","import React from 'react';\nimport ProposalsConnector from '../../connectors/ProposalsConnector';\nimport Page from '../../containers/Page';\nimport trans from '../../translation/trans';\n\n\nexport default function HomePage() {\n    return (\n        <Page>\n            <h1>{trans('home.title')}</h1>\n            <ProposalsConnector />\n        </Page>\n    );\n}","import React from 'react';\nimport CouncilConnector from '../../connectors/CouncilConnector';\nimport Page from '../../containers/Page';\nimport trans from '../../translation/trans';\n\n\nexport default function CouncilPage() {\n    return (\n        <Page>\n            <h1>{trans('council.title')}</h1>\n            \n            <CouncilConnector />\n        </Page>\n    );\n}","import React, { ReactElement } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { routes } from './routes';\n\nexport default function App() {\n    return (\n        <Switch>\n            {routes.map((route): ReactElement => <Route {...route} key={route.key} />)}\n        </Switch>\n    );\n}","import { combineReducers } from 'redux';\n\nimport account, { AccountState } from './account/account';\nimport proposals, { ProposalsState } from './proposals/proposals';\nimport council, { CouncilState } from './council/council';\nimport dao, { DaoState } from './dao/dao';\n\nexport interface Reducers {\n    account: AccountState;\n    proposals: ProposalsState;\n    council: CouncilState;\n    dao: DaoState;\n}\n\nexport default combineReducers<Reducers>({\n    account,\n    council,\n    proposals,\n    dao,\n});\n","import {\n    applyMiddleware,\n    CombinedState,\n    createStore,\n    Store,\n    StoreEnhancer,\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport reducers, { Reducers } from './reducers';\n\nconst createEnhancer = (): StoreEnhancer => (process.env.REACT_APP_APP_ENV !== 'production'\n    ? composeWithDevTools(applyMiddleware(thunk))\n    : applyMiddleware(thunk)\n);\n\nexport default function configureStore(preloadedState: Record<string, any> = {}): Store<CombinedState<Reducers>> {\n    const enhancer = createEnhancer();\n    return createStore(reducers, preloadedState, enhancer);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { StylesProvider } from '@material-ui/core/styles';\n\n\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nimport './styles/global.module.scss';\nimport configureStore from './redux/store';\n\nconst store = configureStore({});\n\nReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <StylesProvider injectFirst>\n          <App />\n        </StylesProvider>\n      </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__1vav1\",\"page__body\":\"Page_page__body__3V8v2\",\"page__body--large\":\"Page_page__body--large__27pTP\",\"page__body--unrestricted\":\"Page_page__body--unrestricted__3wRih\"};"],"sourceRoot":""}