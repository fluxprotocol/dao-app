{"version":3,"sources":["compositions/Dialog/Dialog.module.scss","components/Button/Button.module.scss","components/OptionSwitch/OptionSwitch.module.scss","containers/ProposalsOverview/ProposalsOverview.module.scss","components/Button/Button.tsx","translation/trans.ts","compositions/Dialog/Dialog.tsx","containers/AuthDialog/AuthForm/AuthForm.tsx","containers/AuthDialog/services/createDefaultAuthFormValues.ts","containers/AuthDialog/AuthDialog.tsx","config.ts","services/WalletService.ts","services/contract/AuthContract.ts","redux/auth/auth.ts","redux/auth/authActions.ts","connectors/AuthConnector/AuthConnector.tsx","containers/Footer/Footer.tsx","containers/Menu/Menu.tsx","redux/account/account.ts","services/AccountService.ts","services/contract/DaoContract.ts","redux/dao/dao.ts","connectors/MenuConnector/MenuConnector.tsx","redux/account/accountActions.ts","redux/dao/daoActions.ts","containers/Page/Page.tsx","containers/CouncilOverview/CouncilOverview.tsx","redux/council/council.ts","connectors/CouncilConnector/CouncilConnector.tsx","redux/council/councilActions.ts","models/Proposal.ts","components/OptionSwitch/OptionSwitch.tsx","containers/ProposalDialog/proposalsForms/ResoluteMarketForm/ResoluteMarketForm.tsx","containers/ProposalDialog/proposalsForms/NewCouncilForm/NewCouncilForm.tsx","containers/ProposalDialog/proposalsForms/AddTokenWhitelist/AddTokenWhitelist.tsx","containers/ProposalDialog/ProposalDialog.tsx","containers/ProposalDialog/services/createDefaultProposalFormValues.ts","containers/ProposalDialog/services/createDefaultResoluteMarketFormValues.ts","containers/ProposalInfo/ProposalInfo.tsx","containers/ProposalsOverview/ProposalsOverview.tsx","models/Market.ts","services/GraphQLService.ts","services/MarketService.ts","services/ProposalsService.ts","redux/proposals/proposals.ts","redux/proposals/proposalsActions.ts","connectors/ProposalsConnector/ProposalsConnector.tsx","routes.ts","pages/HomePage/HomePage.tsx","pages/CouncilPage/CouncilPage.tsx","pages/AuthPage/AuthPage.tsx","App.tsx","redux/reducers.ts","redux/store.ts","index.tsx","containers/Page/Page.module.scss"],"names":["module","exports","Button","className","children","props","s","button","trans","key","attributes","uppercaseFirstLetter","result","translations","console","info","text","resultWithAttributes","label","options","replace","word","undefined","replaceAttributes","charAt","toUpperCase","substring","Dialog","title","open","onRequestClose","onSubmitClick","classes","paper","DialogTitle","DialogContent","DialogActions","cancelButton","onClick","confirmButton","AddTokenWhitelist","onChange","values","TextField","event","accountId","currentTarget","value","createDefaultAuthFormValues","AuthContainer","canAuthenticate","onSubmit","history","useHistory","useState","authFormValues","setAuthFormValues","push","API_URL","process","NULL_CONTRACT","MAX_GAS","BN","STORAGE_BASE","sdkInstance","FluxSdk","network","nullContractId","graphApiUrl","connectSdk","a","connect","connectWallet","sdk","walletConnection","authContract","AuthContract","account","contract","this","Contract","viewMethods","changeMethods","is_authenticated","account_id","can_authenticate","add_authenticatees","account_ids","createAuthContract","wallet","authSlice","createSlice","initialState","loading","errors","name","reducers","setAuth","state","action","payload","setAuthLoading","setAuthErrors","actions","authUser","dispatch","addAuthenticatees","checkUserAuth","isAuthenticated","authenticated","CouncilConnector","useDispatch","auth","useSelector","store","accountInfo","error","split","useEffect","Footer","Menu","onLoginClick","onLogoutClick","to","routePaths","root","council","accountSlice","setAccount","setAccountLoading","setAccountErrors","signUserIn","requestSignIn","getAccountInfo","connectedWallet","isSignedIn","nearAccount","getAccountBalance","available","balance","signUserOut","signOut","daoInstance","DaoContract","get_council","get_bond","from_index","limit","get_proposals","id","get_proposal","description","marketId","payoutNumerator","add_proposal","proposal","kind","market_id","payout_numerator","type","target","decimals","to_add","proposalId","vote","getProposal","finalize_external","finalize","createDaoContract","daoSlice","setDaoInfo","daoInfo","setDaoLoading","setDaoErrors","MenuConnector","getBond","bond","handleLoginClick","useCallback","handleLogoutClick","Page","hasNavigation","hasFooter","size","bodyClassName","pageBodyClassName","classnames","styles","page__body","page","CouncilOverview","map","member","councilSlice","setCouncil","setCouncilLoading","setCouncilErrors","getCouncil","ProposalKindType","ProposalStatus","OptionSwitch","labelA","labelB","Switch","_","checked","ResoluteMarketForm","markets","handlePayoutNumeratorsChange","amount","index","newPayoutNumerators","payoutNumerators","Number","selectedMarket","find","market","percentagesTogether","reduce","prev","current","Select","marketDescription","collateralTokenId","outcomeTags","MenuItem","extraInfo","isInvalidMarket","isInvalid","outcome","InputProps","endAdornment","InputAdornment","position","NewCouncilForm","ProposalDialog","newCouncil","addTokenWhitelist","resoluteMarket","ResoluteMarket","formValues","setFormValues","NewCouncil","ProposalInfo","loggedInAccount","onNoClick","onYesClick","onFinalizeClick","date","Date","vote_period_end","log","hasVoted","Boolean","votes","Card","CardActionArea","window","CardContent","Typography","gutterBottom","variant","component","JSON","stringify","status","creator","proposer","toString","CardActions","Vote","disabled","vote_yes","vote_no","Success","ProposalsOverview","onProposalSubmit","onRequestMoreProposals","hasMoreProposals","proposals","isOpen","setOpen","dataLength","length","next","hasMore","loader","infiniteScroll","transformToMarketViewModel","graphResponse","outcome_tags","extra_info","pool","collateral_token_id","cache","InMemoryCache","link","createHttpLink","uri","graphqlClient","ApolloClient","defaultOptions","watchQuery","fetchPolicy","getExpiredMarkets","query","gql","marketsData","data","items","percentagesToDenom","percentages","hunderdPercent","Big","pow","num","mul","toFixed","proposalsSlice","expiredMarkets","setProposals","setProposalsLoading","setProposalsErrors","setProposalsHasMore","setProposalsExpiredMarkets","loadProposals","reset","getState","currentLoadedProposals","offset","getProposals","ProposalsConnector","getTokenMetadata","tokenMetadata","percentagesInToken","createResoluteMarketProposal","createNewCouncilProposal","createAddTokenToWhitelistProposal","createProposal","routes","exact","inNavigation","path","App","route","combineReducers","dao","createEnhancer","REACT_APP_APP_ENV","composeWithDevTools","applyMiddleware","thunk","preloadedState","enhancer","createStore","configureStore","ReactDOM","render","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.ec6d53b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Dialog_paper__XrzDE\",\"cancelButton\":\"Dialog_cancelButton__3SRaV\",\"confirmButton\":\"Dialog_confirmButton__OGdmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Lf63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"OptionSwitch_root__URwjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infiniteScroll\":\"ProposalsOverview_infiniteScroll__yBduR\"};","import React, { FormEvent, ReactNode } from 'react';\nimport { default as MuiButton } from '@material-ui/core/Button';\n\nimport s from './Button.module.scss';\n\ninterface ButtonProps {\n    children: ReactNode | string;\n    className?: string;\n    onClick?: (event: FormEvent<HTMLButtonElement>) => void;\n    variant?: \"text\" | \"outlined\" | \"contained\";\n    disabled?: boolean;\n};\n\nexport default function Button({\n    className = '',\n    children,\n    ...props\n}: ButtonProps) {\n    return (\n        <MuiButton {...props} className={`${s.button} ${className}`}>{children}</MuiButton>\n    );\n}\n","import translations from './lang/translations.eng.json';\n\ninterface Attributes {\n    [key: string]: string;\n}\n\nfunction replaceAttributes(label: string, options: Attributes = {}): string {\n    // Replaces any \":key\" with a value in the options\n    return label.replace(/:(\\w+)/gi, (word) => {\n        const key = word.replace(/^:/, '');\n\n        if (options[key] === undefined || options[key] === null) {\n            return '';\n        }\n\n        return options[key];\n    });\n}\n\nexport function ucFirstLetter(text: string): string {\n    return text.charAt(0).toUpperCase() + text.substring(1);\n}\n\n\nexport default function trans(key: string, attributes?: Attributes, uppercaseFirstLetter?: boolean): string {\n    // @ts-ignore\n    const result: string = translations[key];\n\n    if (!result) {\n        console.info('Transaltion not found for', key)\n        return key;\n    }\n\n    const resultWithAttributes = replaceAttributes(result, attributes);\n    return uppercaseFirstLetter ? ucFirstLetter(resultWithAttributes) : resultWithAttributes;\n}\n\nexport function booleanToYesNo(bool = false): string {\n    return bool ? trans('global.yes') : trans('global.no');\n}\n","import React, { PropsWithChildren } from 'react';\nimport { default as MuiDialog } from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '../../components/Button';\n\nimport s from './Dialog.module.scss';\nimport trans from '../../translation/trans';\n\ninterface Props {\n    title: string;\n    open: boolean;\n    onRequestClose: () => void;\n    onSubmitClick: () => void;\n}\n\nexport default function Dialog({\n    title,\n    children,\n    open,\n    onRequestClose,\n    onSubmitClick,\n}: PropsWithChildren<Props>) {\n    return (\n        <MuiDialog open={open} classes={{ paper: s.paper }}>\n            <DialogTitle>\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                {children}\n            </DialogContent>\n            <DialogActions>\n                <Button className={s.cancelButton} onClick={onRequestClose}>\n                    {trans('global.action.cancel')}\n                </Button>\n                <Button className={s.confirmButton} onClick={onSubmitClick}>\n                    {trans('global.action.submit')}\n                </Button>\n            </DialogActions>\n        </MuiDialog>\n    );\n}\n","import React, { ChangeEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport trans from '../../../translation/trans';\nimport {NewAuthFormValues} from '../services/createDefaultAuthFormValues';\n\n\ninterface Props {\n    onChange: (values: NewAuthFormValues) => void;\n    values: NewAuthFormValues;\n}\n\n\nexport default function AddTokenWhitelist({\n    onChange,\n    values\n}: Props) {\n\n    function handleAccountIdChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            accountId: event.currentTarget.value,\n        });\n    }\n\n    return (\n        <div>\n            <div>\n                <TextField\n                    label={trans('auth.form.input.accountId')}\n                    onChange={handleAccountIdChange}\n                    value={values.accountId}\n                />\n            </div>\n        </div>\n    );\n}","export interface NewAuthFormValues {\n    accountId: string\n}\n\nexport default function createDefaultAuthFormValues(): NewAuthFormValues {\n    return {\n        accountId: ''\n    }\n}","import React, { useState, ChangeEvent } from 'react';\nimport { useHistory } from 'react-router';\nimport Dialog from '../../compositions/Dialog';\nimport trans from '../../translation/trans';\nimport AuthForm from './AuthForm';\nimport createDefaultAuthFormValues, { NewAuthFormValues } from './services/createDefaultAuthFormValues';\n\ninterface Props {\n    canAuthenticate: boolean;\n    onSubmit: (accountId: string) => void;\n}\n\n\nexport default function AuthContainer({\n    canAuthenticate,\n    onSubmit\n}: Props) {\n    const history = useHistory();\n    const [authFormValues, setAuthFormValues] = useState(createDefaultAuthFormValues);\n    if (!canAuthenticate) return <div>{trans('auth.dialog.cannotAuthenticate')}</div>\n\n    function handleAuthFormChange(values: NewAuthFormValues) {\n        setAuthFormValues({\n            accountId: values.accountId\n        });\n    }\n\n    return (\n        <Dialog \n            title={trans(\"auth.dialog.title\")}\n            open={true}\n            onRequestClose={() => history.push(\"/\")}\n            onSubmitClick={() => onSubmit(authFormValues.accountId)}\n        >\n            <AuthForm\n                onChange={handleAuthFormChange}\n                values={authFormValues}\n            />\n        </Dialog>\n    );\n}","import BN from \"bn.js\";\n\nexport const API_URL = process.env.REACT_APP_API_URL || '';\nexport const NULL_CONTRACT = 'null_address.near';\nexport const MAX_GAS = new BN(\"100000000000000\");\nexport const DAO_ACCOUNT_ID = process.env.REACT_APP_DAO_ACCOUNT_ID || '';\nexport const AUTH_ACCOUNT_ID = process.env.REACT_APP_AUTH_ACCOUNT_ID || '';\nexport const STORAGE_BASE = new BN('30000000000000000000000');\nexport const FLUX_MARKET_DETAIL_URL = process.env.REACT_APP_FLUX_MARKET_DETAIL_URL || '';","import {\n    Near,\n    connect,\n    WalletConnection,\n    keyStores,\n} from \"near-api-js\";\nimport FluxSdk from '@fluxprotocol/amm-sdk';\n\n\nimport { API_URL, NULL_CONTRACT } from '../config';\n\nexport interface ConnectConfig {\n    accountId?: string;\n    nearInstance?: Near,\n    walletInstance?: WalletConnection,\n    customNodeUrl?: string\n}\n\nlet sdkInstance = new FluxSdk({\n    // @ts-ignore\n    network: process.env.REACT_APP_NETWORK || 'testnet',\n    nullContractId: NULL_CONTRACT,\n    graphApiUrl: API_URL,\n});\n\n\nexport async function connectSdk(): Promise<FluxSdk> {\n    await sdkInstance.connect();\n    return sdkInstance;\n}\n\nexport async function connectWallet(): Promise<WalletConnection> {\n    const sdk = await connectSdk();\n    return sdk.walletConnection!;\n}\n\n","import BN from \"bn.js\";\nimport { Account, Contract } from \"near-api-js\";\nimport { AUTH_ACCOUNT_ID, MAX_GAS, STORAGE_BASE } from \"../../config\";\nimport { Proposal } from \"../../models/Proposal\";\nimport { connectWallet } from \"../WalletService\";\n\nclass AuthContract {\n    contract: Contract;\n\n    constructor(account: Account) {\n        this.contract = new Contract(account, AUTH_ACCOUNT_ID, {\n            viewMethods: ['is_authenticated', 'can_authenticate'],\n            changeMethods: ['add_authenticatees'],\n        });\n    }\n\n    async isAuthenticated(accountId: string): Promise<boolean> {\n        // @ts-ignore\n        const result = await this.contract.is_authenticated({account_id: accountId});\n\n        return result;\n    }\n\n    async canAuthenticate(accountId: string): Promise<boolean> {\n        // @ts-ignore\n        const result = await this.contract.can_authenticate({account_id: accountId});\n\n        return result;\n    }\n\n    async addAuthenticatees(accountId: string[]) {\n        // @ts-ignore\n        const result = await this.contract.add_authenticatees({ \n            account_ids: accountId\n        }, MAX_GAS, new BN(0))\n\n        return result;\n    }\n}\n\n\nlet authContract: AuthContract;\n\nexport default async function createAuthContract(): Promise<AuthContract> {\n    if (authContract) {\n        return authContract;\n    }\n\n    const wallet = await connectWallet();\n    authContract = new AuthContract(wallet.account());\n\n    return authContract;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type AuthState = Readonly<{\n    canAuthenticate: boolean;\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: AuthState = {\n    canAuthenticate: false,\n    loading: true,\n    errors: []\n};\n\nconst authSlice = createSlice({\n    initialState,\n    name: 'auth',\n    reducers: {\n        setAuth(state: AuthState, action: PayloadAction<boolean>): AuthState {\n            return ({\n                ...state,\n                canAuthenticate: action.payload,\n            });\n        },\n        setAuthLoading(state: AuthState, action: PayloadAction<boolean>): AuthState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setAuthErrors(state: AuthState, action: PayloadAction<string[]>): AuthState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setAuth,\n    setAuthErrors,\n    setAuthLoading,\n} = authSlice.actions;\n\nexport default authSlice.reducer;\n","import createAuthContract from \"../../services/contract/AuthContract\";\nimport { setAuth, setAuthErrors, setAuthLoading } from \"./auth\"\n\nexport function loadAuth(accountId: string) {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setAuthLoading(true));\n            const contract = await createAuthContract();\n            const canAuthenticate = await contract.canAuthenticate(accountId);\n            dispatch(setAuth(canAuthenticate));\n            dispatch(setAuthLoading(false));\n        } catch(error) {\n            dispatch(setAuthErrors(error));\n            dispatch(setAuthLoading(false));\n        }\n    }\n}\n\nexport function authUser(accountId: string[]) {\n    return async (dispatch: Function) => {\n        const contract = await createAuthContract();\n        dispatch(setAuthLoading(true));\n        await contract.addAuthenticatees(accountId);\n        dispatch(setAuthLoading(false));\n    }\n}\n\nexport function checkUserAuth(accountId: string) {\n    return async (dispatch: Function): Promise<boolean> => {\n        const contract = await createAuthContract();\n        dispatch(setAuthLoading(true));\n        let authenticated = await contract.isAuthenticated(accountId);\n        dispatch(setAuthLoading(false));\n        return authenticated;\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthDialog from '../../containers/AuthDialog';\nimport { authUser, checkUserAuth, loadAuth } from '../../redux/auth/authActions';\nimport { Reducers } from '../../redux/reducers';\n\nexport default function CouncilConnector() {\n    const dispatch = useDispatch();\n    const auth = useSelector((store: Reducers) => store.auth.canAuthenticate);\n    const accountInfo = useSelector((store: Reducers) => store.account.account);\n\n    useEffect(() => {\n        if (!accountInfo) return\n        dispatch(loadAuth(accountInfo.accountId));\n    }, [accountInfo]);\n    \n    async function handleSubmit(accountId: string) {\n        const userIsAuth = await checkUserAuth(accountId)(dispatch);\n        if (userIsAuth) {\n            return console.error(\"user is already authenticated\")\n        }\n        dispatch(authUser(accountId.split(/(?:,| )+/) \n\n        ));\n    }\n\n    return (\n        <AuthDialog\n            canAuthenticate={auth}\n            onSubmit={handleSubmit}\n        />\n    );\n}","import React from 'react';\n\n\nexport default function Footer() {\n    return (\n        <footer>\n            \n        </footer>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Account } from '../../models/Account';\nimport { routePaths } from '../../routes';\nimport trans from '../../translation/trans';\n\ninterface Props {\n    onLoginClick: () => void;\n    onLogoutClick: () => void;\n    account: Account | null;\n}\n\nexport default function Menu({\n    onLoginClick,\n    onLogoutClick,\n    account,\n}: Props) {\n    return (\n        <section>\n            {!account && (\n                <button onClick={onLoginClick}>{trans('menu.login')}</button>\n            )}\n\n            {account && (\n                <>\n                    <span>{trans('menu.loggedInAs', { accountId: account.accountId })}</span>\n                    <button onClick={onLogoutClick}>{trans('menu.logout')}</button>\n                </>\n            )}\n\n            <Link to={routePaths.root()}>{trans('menu.item.home')}</Link>\n            <Link to={routePaths.council()}>{trans('menu.item.council')}</Link>\n\n            {account &&(\n                <Link to={routePaths.auth()}>{trans('menu.item.auth')}</Link>\n            )}\n        </section>\n    );\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Account } from '../../models/Account';\n\nexport type AccountState = Readonly<{\n    account: Account | null;\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: AccountState = {\n    account: null,\n    loading: false,\n    errors: [],\n};\n\nconst accountSlice = createSlice({\n    initialState,\n    name: 'account',\n    reducers: {\n        setAccount(state: AccountState, action: PayloadAction<Account | null>): AccountState {\n            return ({\n                ...state,\n                account: action.payload,\n            });\n        },\n        setAccountLoading(state: AccountState, action: PayloadAction<boolean>): AccountState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setAccountErrors(state: AccountState, action: PayloadAction<string[]>): AccountState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setAccount,\n    setAccountErrors,\n    setAccountLoading,\n} = accountSlice.actions;\n\nexport default accountSlice.reducer;\n","import { NULL_CONTRACT } from \"../config\";\nimport { Account } from \"../models/Account\";\nimport trans from \"../translation/trans\";\nimport { connectWallet } from \"./WalletService\";\n\nexport async function signUserIn() {\n    const connectedWallet = await connectWallet();\n    connectedWallet.requestSignIn(NULL_CONTRACT, trans('global.appName'));\n}\n\nexport async function getAccountInfo(): Promise<Account | null> {\n    const connectedWallet = await connectWallet();\n\n    if (!connectedWallet.isSignedIn()) {\n        return null;\n    }\n\n    const nearAccount = connectedWallet.account();\n\n    return {\n        accountId: nearAccount.accountId,\n        balance: (await nearAccount.getAccountBalance()).available,\n    };\n}\n\nexport async function signUserOut() {\n    const connectedWallet = await connectWallet();\n    connectedWallet.signOut();\n}\n","import BN from \"bn.js\";\nimport { Account, Contract } from \"near-api-js\";\nimport { DAO_ACCOUNT_ID, MAX_GAS, STORAGE_BASE } from \"../../config\";\nimport { Proposal } from \"../../models/Proposal\";\nimport { connectWallet } from \"../WalletService\";\n\nclass DaoContract {\n    contract: Contract;\n\n    constructor(account: Account) {\n        this.contract = new Contract(account, DAO_ACCOUNT_ID, {\n            viewMethods: ['get_council', 'get_bond', 'get_proposals', 'get_proposal'],\n            changeMethods: ['add_proposal', 'vote', 'finalize', 'finalize_external'],\n        });\n    }\n\n    async getCouncil(): Promise<string[]> {\n        // @ts-ignore\n        const result = await this.contract.get_council({ a: 1 });\n\n        return result;\n    }\n\n    async getBond(): Promise<string> {\n        // @ts-ignore\n        const result = await this.contract.get_bond({ a: 1 });\n\n        return result;\n    }\n\n    async getProposals(from_index = \"0\", limit = \"1000\"): Promise<Proposal[]> {\n        // @ts-ignore\n        const result = await this.contract.get_proposals({ \n            from_index,\n            limit,\n        });\n\n        return result;\n    }\n    async getProposal(id: string): Promise<Proposal> {\n        // @ts-ignore\n        const result = await this.contract.get_proposal({ \n            id\n        });\n\n        return result;\n    }\n\n    async createResoluteMarketProposal(description: string, marketId: string, payoutNumerator?: string[]) {\n        // @ts-ignore\n        this.contract.add_proposal({\n            proposal: {\n                description,\n                kind: {\n                    market_id: marketId,\n                    payout_numerator: payoutNumerator,\n                    type: 'ResoluteMarket',\n                }\n            }\n        }, MAX_GAS, STORAGE_BASE);\n    }\n\n    async createNewCouncilProposal(description: string, accountId: string) {\n        // @ts-ignore\n        this.contract.add_proposal({\n            proposal: {\n                description,\n                kind: {\n                    target: accountId,\n                    type: 'NewCouncil',\n                }\n            }\n        }, MAX_GAS, STORAGE_BASE);\n    }\n\n    async createAddTokenToWhitelistProposal(description: string, accountId: string, decimals: number) {\n        // @ts-ignore\n        this.contract.add_proposal({\n            proposal: {\n                description,\n                kind: {\n                    to_add: accountId,\n                    decimals,\n                    type: 'AddTokenWhitelist',\n                }\n            }\n        }, MAX_GAS, STORAGE_BASE);\n    }\n\n    vote(proposalId: string, vote: 'Yes' | 'No') {\n        // @ts-ignore\n        this.contract.vote({\n            id: proposalId,\n            vote,\n        }, MAX_GAS, new BN(0));\n    }\n\n    async finalize(proposalId: string) {\n        const proposal = await this.getProposal(proposalId);\n        if (proposal.kind.type === \"ResoluteMarket\" || proposal.kind.type === \"AddTokenWhitelist\") {\n            // @ts-ignore\n            this.contract.finalize_external({\n                id: proposalId,\n            }, MAX_GAS, new BN(0));\n        } else {\n            // @ts-ignore\n            this.contract.finalize({\n                id: proposalId,\n            }, MAX_GAS, new BN(0));\n        }\n    }\n}\n\n\nlet daoInstance: DaoContract;\n\nexport default async function createDaoContract(): Promise<DaoContract> {\n    if (daoInstance) {\n        return daoInstance;\n    }\n\n    const wallet = await connectWallet();\n    daoInstance = new DaoContract(wallet.account());\n\n    return daoInstance;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DaoInfo } from '../../models/DaoInfo';\n\nexport type DaoState = Readonly<{\n    daoInfo?: DaoInfo;\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: DaoState = {\n    loading: false,\n    errors: [],\n};\n\nconst daoSlice = createSlice({\n    initialState,\n    name: 'daoInfo',\n    reducers: {\n        setDaoInfo(state: DaoState, action: PayloadAction<DaoInfo>): DaoState {\n            return ({\n                ...state,\n                daoInfo: action.payload,\n            });\n        },\n        setDaoLoading(state: DaoState, action: PayloadAction<boolean>): DaoState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setDaoErrors(state: DaoState, action: PayloadAction<string[]>): DaoState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setDaoErrors,\n    setDaoInfo,\n    setDaoLoading,\n} = daoSlice.actions;\n\nexport default daoSlice.reducer;\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Menu from '../../containers/Menu';\nimport { getAccount, signIn, signOut } from '../../redux/account/accountActions';\nimport { loadDaoInfo } from '../../redux/dao/daoActions';\nimport { Reducers } from '../../redux/reducers';\n\n\nexport default function MenuConnector() {\n    const dispatch = useDispatch();\n    const accountInfo = useSelector((store: Reducers) => store.account.account);\n\n    useEffect(() => {\n        if (!accountInfo) {\n            dispatch(getAccount());\n        }\n\n        dispatch(loadDaoInfo());\n    }, [dispatch, accountInfo]);\n\n    const handleLoginClick = useCallback(() => {\n        dispatch(signIn());\n    }, []);\n\n    const handleLogoutClick = useCallback(() => {\n        dispatch(signOut());\n    }, []);\n\n    return (\n        <Menu \n            onLoginClick={handleLoginClick} \n            onLogoutClick={handleLogoutClick}\n            account={accountInfo}\n        />\n    );\n}","import { setAccount, setAccountLoading } from \"./account\";\nimport { signUserIn, getAccountInfo, signUserOut } from '../../services/AccountService';\n\nexport function signIn() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setAccountLoading(true));\n            await signUserIn();\n            dispatch(setAccountLoading(false));\n        } catch (error) {\n            dispatch(setAccountLoading(false));\n            console.error('[signIn]', error);\n        }\n    }\n}\n\nexport function getAccount() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setAccountLoading(true));\n            const account = await getAccountInfo();\n            dispatch(setAccount(account));\n            dispatch(setAccountLoading(false));\n        } catch (error) {\n            dispatch(setAccountLoading(false));\n            console.error('[getAccount]', error);\n        }\n    }\n}\n\nexport function signOut() {\n    return async (dispatch: Function) => {\n        await signUserOut();\n        dispatch(setAccount(null));\n    }\n}\n","import createDaoContract from \"../../services/contract/DaoContract\";\nimport { setDaoErrors, setDaoInfo, setDaoLoading } from \"./dao\"\n\nexport function loadDaoInfo() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setDaoLoading(true));\n            const contract = await createDaoContract();\n            const bond = await contract.getBond();\n\n            dispatch(setDaoInfo({\n                bond,\n            }));\n    \n            dispatch(setDaoLoading(false));\n        } catch (error) {\n            dispatch(setDaoErrors(error));\n            dispatch(setDaoLoading(false));\n        }\n    }\n}","import React, { PropsWithChildren, ReactElement } from \"react\";\nimport classnames from 'classnames';\n\nimport Footer from \"../Footer\";\nimport MenuConnector from \"../../connectors/MenuConnector\";\n\nimport styles from './Page.module.scss';\ninterface Props {\n    className?: string;\n    bodyClassName?: string;\n    hasNavigation?: boolean;\n    hasFooter?: boolean;\n    size?: 'large' | 'medium' | 'unrestricted';\n}\n\nexport default function Page({\n    children,\n    hasNavigation = true,\n    hasFooter = true,\n    size = 'medium',\n    className = '',\n    bodyClassName = '',\n}: PropsWithChildren<Props>): ReactElement {\n    const pageBodyClassName = classnames(styles.page__body, bodyClassName, {\n        [styles['page__body--large']]: size === 'large',\n        [styles['page__body--unrestricted']]: size === 'unrestricted',\n    });\n\n    return (\n        <div className={`${styles.page} ${className}`}>\n            {/* Normally don't put connectors in containers.. */}\n            {hasNavigation && <MenuConnector />}\n            <main className={pageBodyClassName}>\n                {children}\n            </main>\n            {hasFooter && <Footer />}\n        </div>\n    );\n}\n","import React from 'react';\n\ninterface Props {\n    council: string[];\n}\n\nexport default function CouncilOverview({\n    council,\n}: Props) {\n    return (\n        <section>\n            {council.map((member) => (\n                <div key={member}>{member}</div>\n            ))}\n        </section>\n    );\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type CouncilState = Readonly<{\n    council: string[];\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: CouncilState = {\n    council: [],\n    loading: false,\n    errors: [],\n};\n\nconst councilSlice = createSlice({\n    initialState,\n    name: 'council',\n    reducers: {\n        setCouncil(state: CouncilState, action: PayloadAction<string[]>): CouncilState {\n            return ({\n                ...state,\n                council: action.payload,\n            });\n        },\n        setCouncilLoading(state: CouncilState, action: PayloadAction<boolean>): CouncilState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setCouncilErrors(state: CouncilState, action: PayloadAction<string[]>): CouncilState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setCouncil,\n    setCouncilErrors,\n    setCouncilLoading,\n} = councilSlice.actions;\n\nexport default councilSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CouncilOverview from '../../containers/CouncilOverview';\nimport { loadCouncil } from '../../redux/council/councilActions';\nimport { Reducers } from '../../redux/reducers';\n\n\nexport default function CouncilConnector() {\n    const dispatch = useDispatch();\n    const council = useSelector((store: Reducers) => store.council.council);\n\n    useEffect(() => {\n        dispatch(loadCouncil());\n    }, []);\n\n    return (\n        <CouncilOverview council={council} />\n    );\n}","import createDaoContract from \"../../services/contract/DaoContract\";\nimport { setCouncil, setCouncilErrors, setCouncilLoading } from \"./council\"\n\nexport function loadCouncil() {\n    return async (dispatch: Function) => {\n        try {\n            dispatch(setCouncilLoading(true));\n            const contract = await createDaoContract();\n            const council = await contract.getCouncil();\n            dispatch(setCouncil(council));\n            dispatch(setCouncilLoading(false));\n        } catch(error) {\n            dispatch(setCouncilErrors(error));\n            dispatch(setCouncilLoading(false));\n        }\n    }\n}","import { Vote } from \"./Vote\"\n\nexport enum ProposalKindType {\n    ResoluteMarket = 'ResoluteMarket',\n    NewCouncil = 'NewCouncil',\n    AddTokenWhitelist = 'AddTokenWhitelist',\n}\n\nexport enum ProposalStatus {\n    /// Proposal is in active voting stage.\n    Vote = 'Vote',\n    /// Proposal has successfully passed.\n    Success = 'Success',\n    /// Proposal was rejected by the vote.\n    Reject = 'Reject',\n    /// Proposal is finalized\n    Finalized = 'Finalized',\n    /// Proposal is rejected\n    Rejected = 'Rejected'\n}\n\nexport interface Proposal {\n    status: ProposalStatus;\n    proposer: string;\n    description: string;\n    kind: {\n        type: ProposalKindType,\n    };\n    last_vote: number;\n    vote_period_end: number;\n    vote_yes: number;\n    vote_no: number;\n    votes: {\n        [key: string]: Vote;\n    };\n}","import React, { ReactElement } from 'react';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport s from './OptionSwitch.module.scss';\n\ninterface Props {\n    labelA: string;\n    labelB: string;\n    onChange: (checked: boolean) => void;\n    value?: boolean;\n}\n\nexport default function OptionSwitch({\n    labelA,\n    labelB,\n    onChange,\n    value,\n}: Props): ReactElement {\n    return (\n        <span className={s.root}>\n            <span>{labelA}</span>\n            <Switch value={value} onChange={(_, checked) => onChange(checked)} />\n            <span>{labelB}</span>\n        </span>\n    );\n}\n","import InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport React, { ChangeEvent } from 'react';\nimport OptionSwitch from '../../../../components/OptionSwitch';\nimport { MarketViewModel } from '../../../../models/Market';\nimport trans from '../../../../translation/trans';\nimport { ResoluteMarketFormValues } from '../../services/createDefaultResoluteMarketFormValues';\n\ninterface Props {\n    onChange: (values: ResoluteMarketFormValues) => void;\n    values: ResoluteMarketFormValues;\n    markets: MarketViewModel[];\n}\n\nexport default function ResoluteMarketForm({\n    onChange,\n    values,\n    markets,\n}: Props) {\n    function handleMarketTypeChange(isInvalid: boolean) {\n        onChange({\n            ...values,\n            isInvalidMarket: isInvalid,\n        });\n    }\n\n    function handleMarketIdChange(event: ChangeEvent<{ name?: string, value: unknown }>) {\n        const market = markets.find(market => market.id === event.target.value);\n\n        onChange({\n            ...values,\n            marketId: market?.id ?? '',\n            marketDescription: market?.description ?? '',\n            collateralTokenId: market?.collateralTokenId ?? '',\n            payoutNumerators: market?.outcomeTags.map(_ => 0) ?? [],\n        });\n    }\n\n    function handlePayoutNumeratorsChange(amount: string, index: number) {\n        const newPayoutNumerators = values.payoutNumerators;\n        newPayoutNumerators[index] = Number(amount);\n\n        onChange({\n            ...values,\n            payoutNumerators: newPayoutNumerators,\n        });\n    }\n\n    const selectedMarket = markets.find(market => market.id === values.marketId);\n    const percentagesTogether = values.payoutNumerators.reduce((prev, current) => prev + current, 0);\n\n    return (\n        <div>\n            <div>\n                <Select label={trans('resoluteMarketForm.input.marketId')} value={values.marketId} onChange={handleMarketIdChange}>\n                    {markets.map((market) => (\n                        <MenuItem key={market.id} value={market.id}>{market.id} - {market.description}</MenuItem>\n                    ))}\n                </Select>\n            </div>\n            <div>\n                <br />\n                {selectedMarket?.extraInfo}\n            </div>\n            <OptionSwitch\n                labelA={trans('resoluteMarketForm.input.validMarket')}\n                labelB={trans('resoluteMarketForm.input.invalidMarket')} \n                value={values.isInvalidMarket}\n                onChange={handleMarketTypeChange}\n            />\n            <div>\n                {!values.isInvalidMarket && (\n                    <div>\n                        {selectedMarket?.outcomeTags.map((outcome, index) => (\n                            <div key={index}>\n                                <TextField \n                                    label={outcome}\n                                    onChange={(event) => handlePayoutNumeratorsChange(event.target.value, index)}\n                                    value={values.payoutNumerators[index] || '0'}\n                                    type=\"number\"\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <span>%</span>\n                                            </InputAdornment>\n                                        )\n                                    }}\n                                />\n                            </div>\n                        ))}\n\n                        {percentagesTogether !== 100 && (\n                            <p>{trans('resoluteMarketForm.error.not100')}</p>\n                        )}\n                    </div>\n                )}\n\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { NewCouncilFormValues } from '../../services/createDefaultProposalFormValues';\nimport trans from '../../../../translation/trans';\n\ninterface Props {\n    onChange: (values: NewCouncilFormValues) => void;\n    values: NewCouncilFormValues;\n}\n\nexport default function NewCouncilForm({\n    onChange,\n    values,\n}: Props) {\n    function handleDescriptionChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            description: event.currentTarget.value,\n        });\n    }\n\n    function handleAccountIdChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            accountId: event.currentTarget.value,\n        });\n    }\n\n    return (\n        <div>\n            <div>\n                <TextField\n                    label={trans('newCouncilForm.input.accountId')}\n                    onChange={handleAccountIdChange}\n                    value={values.accountId}\n                />\n            </div>\n            <div>\n                <TextField\n                    label={trans('newCouncilForm.input.description')}\n                    onChange={handleDescriptionChange}\n                    value={values.description}\n                />\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { AddTokenWhitelistFormValues } from '../../services/createDefaultProposalFormValues';\nimport trans from '../../../../translation/trans';\n\ninterface Props {\n    onChange: (values: AddTokenWhitelistFormValues) => void;\n    values: AddTokenWhitelistFormValues;\n}\n\n\nexport default function AddTokenWhitelist({\n    onChange,\n    values,\n}: Props) {\n    function handleDescriptionChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            description: event.currentTarget.value,\n        });\n    }\n\n    function handleAccountIdChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            accountId: event.currentTarget.value,\n        });\n    }\n\n    function handleDecimalsChange(event: ChangeEvent<HTMLInputElement>) {\n        onChange({\n            ...values,\n            decimals: Number(event.currentTarget.value),\n        });\n    }\n\n    return (\n        <div>\n            <div>\n                <TextField\n                    label={trans('addTokenWhitelist.input.accountId')}\n                    onChange={handleAccountIdChange}\n                    value={values.accountId}\n                />\n            </div>\n            <div>\n                <TextField\n                    label={trans('addTokenWhitelist.input.decimals')}\n                    type=\"number\"\n                    onChange={handleDecimalsChange}\n                    value={values.decimals}\n                />\n            </div>\n            <div>\n                <TextField\n                    label={trans('addTokenWhitelist.input.description')}\n                    onChange={handleDescriptionChange}\n                    value={values.description}\n                />\n            </div>\n        </div>\n    );\n}","import React, { ChangeEvent, useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Dialog from '../../compositions/Dialog';\nimport trans from '../../translation/trans';\nimport ResoluteMarketForm from './proposalsForms/ResoluteMarketForm';\nimport { ProposalKindType } from '../../models/Proposal';\nimport createDefaultProposalFormValues, { AddTokenWhitelistFormValues, NewCouncilFormValues } from './services/createDefaultProposalFormValues';\nimport { ResoluteMarketFormValues } from './services/createDefaultResoluteMarketFormValues';\nimport { ProposalFormValues } from '../../services/ProposalsService';\nimport { MarketViewModel } from '../../models/Market';\nimport NewCouncilForm from './proposalsForms/NewCouncilForm';\nimport AddTokenWhitelist from './proposalsForms/AddTokenWhitelist';\n\ninterface Props {\n    open: boolean;\n    markets: MarketViewModel[];\n    onRequestClose: () => void;\n    onSubmit: (value: ProposalFormValues) => void;\n}\n\nexport default function ProposalDialog({\n    open,\n    markets,\n    onRequestClose,\n    onSubmit,\n}: Props) {\n    const [formValues, setFormValues] = useState(createDefaultProposalFormValues());\n\n    function handleSelectChange(event: ChangeEvent<{name?: string, value: unknown}>) {\n        setFormValues({\n            ...formValues,\n            type: event.target.value as ProposalKindType\n        });\n    }\n\n    function handleResoluteMarketChange(resoluteMarket: ResoluteMarketFormValues) {\n        setFormValues({\n            ...formValues,\n            resoluteMarket,\n        });\n    }\n\n    function handleNewCouncilChange(newCouncil: NewCouncilFormValues) {\n        setFormValues({\n            ...formValues,\n            newCouncil,\n        });\n    }\n\n    function handleAddTokenWhitelistChange(addTokenWhitelist: AddTokenWhitelistFormValues) {\n        setFormValues({\n            ...formValues,\n            addTokenWhitelist,\n        });\n    }\n\n    return (\n        <Dialog \n            open={open} \n            title={trans('proposalDialog.title')}\n            onSubmitClick={() => onSubmit(formValues)}\n            onRequestClose={onRequestClose}\n        >\n            <Select value={formValues.type} onChange={handleSelectChange}>\n                <MenuItem value={ProposalKindType.ResoluteMarket}>{trans('proposalDialog.types.resoluteMarket')}</MenuItem>\n                <MenuItem value={ProposalKindType.NewCouncil}>{trans('proposalDialog.types.newCouncil')}</MenuItem>\n                <MenuItem value={ProposalKindType.AddTokenWhitelist}>{trans('proposalDialog.types.addTokenWhitelist')}</MenuItem>\n            </Select>\n\n            {formValues.type === ProposalKindType.ResoluteMarket && (\n                <ResoluteMarketForm\n                    markets={markets}\n                    values={formValues.resoluteMarket}\n                    onChange={handleResoluteMarketChange}\n                />\n            )}\n\n            {formValues.type === ProposalKindType.NewCouncil && (\n                <NewCouncilForm\n                    values={formValues.newCouncil}\n                    onChange={handleNewCouncilChange}\n                />\n            )}\n\n            {formValues.type === ProposalKindType.AddTokenWhitelist && (\n                <AddTokenWhitelist \n                    values={formValues.addTokenWhitelist}\n                    onChange={handleAddTokenWhitelistChange}\n                />\n            )}\n        </Dialog>\n    );\n}","import { ProposalKindType } from \"../../../models/Proposal\";\nimport { ProposalFormValues } from \"../../../services/ProposalsService\";\nimport createDefaultResoluteMarketFormValues from \"./createDefaultResoluteMarketFormValues\";\n\nexport interface NewCouncilFormValues {\n    accountId: string;\n    description: string;\n}\n\nexport interface AddTokenWhitelistFormValues {\n    accountId: string;\n    description: string;\n    decimals: number;\n}\n\nexport default function createDefaultProposalFormValues(): ProposalFormValues {\n    return {\n        newCouncil: {\n            accountId: '',\n            description: '',\n        },\n        addTokenWhitelist: {\n            accountId: '',\n            description: '',\n            decimals: 18,\n        },\n        resoluteMarket: createDefaultResoluteMarketFormValues(),\n        type: ProposalKindType.ResoluteMarket,\n    }\n}","export interface ResoluteMarketFormValues {\n    isInvalidMarket: boolean;\n    marketId: string;\n    marketDescription: string;\n    collateralTokenId: string;\n    payoutNumerators: number[];\n}\n\nexport default function createDefaultResoluteMarketFormValues(): ResoluteMarketFormValues {\n    return {\n        isInvalidMarket: false,\n        marketId: '',\n        marketDescription: '',\n        collateralTokenId: '',\n        payoutNumerators: [],\n    };\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Proposal, ProposalKindType, ProposalStatus } from '../../models/Proposal';\nimport Button from '../../components/Button';\nimport trans from '../../translation/trans';\nimport { FLUX_MARKET_DETAIL_URL } from '../../config';\nimport { Account } from '../../models/Account';\n\ninterface Props {\n    proposal: Proposal;\n    loggedInAccount: Account | null;\n    onYesClick: () => void;\n    onNoClick: () => void;\n    onFinalizeClick: () => void;\n}\n\nexport default function ProposalInfo({\n    proposal,\n    loggedInAccount,\n    onNoClick,\n    onYesClick,\n    onFinalizeClick,\n}: Props) {\n    const date = new Date(proposal.vote_period_end / 1000000);\n    const accountId = loggedInAccount?.accountId || '';\n\n    console.log('[] proposal -> ', proposal);\n\n    function handleCardClick() {\n        if (proposal.kind.type === ProposalKindType.ResoluteMarket) {\n            // @ts-ignore\n            window.open(`${FLUX_MARKET_DETAIL_URL}${proposal.kind.market_id}`, '_blank');\n        }\n    }\n\n    const hasVoted = Boolean(proposal.votes[accountId]);\n\n    return (\n        <Card>\n            <CardActionArea onClick={handleCardClick}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {proposal.description}\n                    </Typography>\n                    <pre>\n                        {JSON.stringify(proposal.kind, null, 4)}\n                    </pre>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.status', {\n                            status: proposal.status\n                        })}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.creator', {\n                            creator: proposal.proposer\n                        })}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                        {trans('proposalInfo.label.votePeriodEnd', {\n                            date: date.toString(),\n                        })}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                {proposal.status === ProposalStatus.Vote && (\n                    <>\n                        <Button disabled={hasVoted} onClick={onYesClick}>\n                            {trans('proposalInfo.action.voteYes', {\n                                amount: proposal.vote_yes.toString(),\n                            })}\n                        </Button>\n                        <Button disabled={hasVoted} onClick={onNoClick}>\n                            {trans('proposalInfo.action.voteNo', {\n                                amount: proposal.vote_no.toString(),\n                            })}\n                        </Button>\n                    </>\n                )}\n\n                {proposal.status === ProposalStatus.Success && (\n                    <Button onClick={onFinalizeClick}>\n                        {trans('proposalInfo.action.finalize')}\n                    </Button>\n                )}\n            </CardActions>\n        </Card>\n    );\n}","import React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { MarketViewModel } from '../../models/Market';\nimport { Account } from '../../models/Account';\nimport { Proposal } from '../../models/Proposal';\nimport { ProposalFormValues } from '../../services/ProposalsService';\nimport trans from '../../translation/trans';\nimport ProposalDialog from '../ProposalDialog';\nimport ProposalInfo from '../ProposalInfo';\n\nimport s from './ProposalsOverview.module.scss';\n\ninterface Props {\n    onProposalSubmit: (values: ProposalFormValues) => void;\n    proposals: Proposal[];\n    loggedInAccount: Account | null;\n    markets: MarketViewModel[];\n    hasMoreProposals: boolean;\n    onRequestMoreProposals: () => void;\n    onYesClick: (proposal: Proposal, id: number) => void;\n    onNoClick: (proposal: Proposal, id: number) => void;\n    onFinalizeClick: (proposal: Proposal, id: number) => void;\n}\n\n\nexport default function ProposalsOverview({\n    onProposalSubmit,\n    onNoClick,\n    onYesClick,\n    onFinalizeClick,\n    onRequestMoreProposals,\n    hasMoreProposals,\n    proposals,\n    markets,\n    loggedInAccount,\n}: Props) {\n    const [isOpen, setOpen] = useState(false);\n\n    function onCreateClick() {\n        setOpen(true);\n    }\n\n    return (\n        <section>\n            <button onClick={onCreateClick}>{trans('proposalsOverview.create')}</button>\n\n            <InfiniteScroll\n                dataLength={proposals.length}\n                next={onRequestMoreProposals}\n                hasMore={hasMoreProposals}\n                loader={<div />}\n                className={s.infiniteScroll}\n            >\n                {proposals.map((proposal, index) => (\n                    <ProposalInfo\n                        key={index}\n                        proposal={proposal}\n                        onNoClick={() => onNoClick(proposal, index)}\n                        onYesClick={() => onYesClick(proposal, index)}\n                        onFinalizeClick={() => onFinalizeClick(proposal, index)}\n                        loggedInAccount={loggedInAccount}\n                    />\n                ))}\n            </InfiniteScroll>\n\n            <ProposalDialog\n                markets={markets}\n                open={isOpen} \n                onRequestClose={() => setOpen(false)}\n                onSubmit={onProposalSubmit}\n            />\n        </section>\n    );\n}","export interface GraphMarketResponse {\n    description: string;\n    id: string;\n    outcome_tags: string[];\n    extra_info: string;\n    pool: {\n        collateral_token_id: string;\n    }\n}\n\nexport interface MarketViewModel {\n    id: string;\n    description: string;\n    outcomeTags: string[];\n    extraInfo: string;\n    collateralTokenId: string;\n}\n\nexport function transformToMarketViewModel(\n    graphResponse: GraphMarketResponse,\n): MarketViewModel {\n    return {\n        id: graphResponse.id,\n        description: graphResponse.description,\n        outcomeTags: graphResponse.outcome_tags,\n        extraInfo: graphResponse.extra_info,\n        collateralTokenId: graphResponse.pool.collateral_token_id,\n    }\n}\n","import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { API_URL } from '../config';\n\nconst cache = new InMemoryCache();\nconst link = createHttpLink({\n    uri: API_URL,\n});\n\nexport const graphqlClient = new ApolloClient({\n    cache,\n    link,\n\n    defaultOptions: {\n        watchQuery: {\n            fetchPolicy: 'cache-and-network',\n        }\n    }\n});\n","import { gql } from \"@apollo/client\";\nimport { GraphMarketResponse, MarketViewModel, transformToMarketViewModel } from \"../models/Market\";\nimport { graphqlClient } from \"./GraphQLService\";\n\nexport async function getExpiredMarkets(): Promise<MarketViewModel[]> {\n    try {\n        const result = await graphqlClient.query({\n            query: gql`\n                query ExiredMarkets {\n                    markets: getMarkets(filters: { expired: true, finalized: false }) {\n                        items {\n                            id\n                            description\n                            outcome_tags\n                            extra_info\n                            pool {\n                                collateral_token_id\n                            }\n                        }\n                    }\n                }\n            `,\n        });\n\n        const marketsData: GraphMarketResponse[] = result.data.markets.items;\n        \n        return marketsData.map(market => transformToMarketViewModel(market));\n    } catch (error) {\n        console.error('[getExpiredMarkets]', error);\n        return [];\n    }\n}","import Big from 'big.js';\nimport { AddTokenWhitelistFormValues, NewCouncilFormValues } from '../containers/ProposalDialog/services/createDefaultProposalFormValues';\n\nimport { ResoluteMarketFormValues } from \"../containers/ProposalDialog/services/createDefaultResoluteMarketFormValues\";\nimport { ProposalKindType } from \"../models/Proposal\";\n\nexport interface ProposalFormValues {\n    newCouncil: NewCouncilFormValues;\n    resoluteMarket: ResoluteMarketFormValues;\n    addTokenWhitelist: AddTokenWhitelistFormValues;\n    type: ProposalKindType;\n}\n\nexport function fetchProposals() {\n    \n}\n\nexport function payoutNumeratorStringToPercentages(rawValue: string) {\n    return rawValue.split(' ').map(v => Number(v.trim()));\n}\n\nexport function percentagesToDenom(percentages: number[], decimals: number) {\n    const hunderdPercent = new Big(10).pow(decimals);\n    return percentages.map(num => hunderdPercent.mul(num / 100).toFixed(0));\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { MarketViewModel } from '../../models/Market';\nimport { Proposal } from '../../models/Proposal';\n\nexport type ProposalsState = Readonly<{\n    proposals: Proposal[];\n    hasMoreProposals: boolean;\n    expiredMarkets: MarketViewModel[];\n    loading: boolean;\n    errors: string[];\n}>;\n\nconst initialState: ProposalsState = {\n    hasMoreProposals: true,\n    proposals: [],\n    expiredMarkets: [],\n    loading: false,\n    errors: [],\n};\n\nconst proposalsSlice = createSlice({\n    initialState,\n    name: 'proposals',\n    reducers: {\n        setProposals(state: ProposalsState, action: PayloadAction<Proposal[]>): ProposalsState {\n            return ({\n                ...state,\n                proposals: action.payload,\n            });\n        },\n        setProposalsLoading(state: ProposalsState, action: PayloadAction<boolean>): ProposalsState {\n            return ({\n                ...state,\n                loading: action.payload,\n            });\n        },\n        setProposalsErrors(state: ProposalsState, action: PayloadAction<string[]>): ProposalsState {\n            return ({\n                ...state,\n                errors: action.payload,\n            });\n        },\n        setProposalsHasMore(state: ProposalsState, action: PayloadAction<boolean>): ProposalsState {\n            return ({\n                ...state,\n                hasMoreProposals: action.payload,\n            });\n        },\n        setProposalsExpiredMarkets(state: ProposalsState, action: PayloadAction<MarketViewModel[]>): ProposalsState {\n            return ({\n                ...state,\n                expiredMarkets: action.payload,\n            });\n        },\n    },\n});\n\nexport const {\n    setProposals,\n    setProposalsLoading,\n    setProposalsErrors,\n    setProposalsExpiredMarkets,\n    setProposalsHasMore,\n} = proposalsSlice.actions;\n\nexport default proposalsSlice.reducer;\n","import { ProposalKindType } from \"../../models/Proposal\";\nimport createDaoContract from \"../../services/contract/DaoContract\";\nimport { getExpiredMarkets } from \"../../services/MarketService\";\nimport { percentagesToDenom, ProposalFormValues } from \"../../services/ProposalsService\";\nimport { connectSdk } from \"../../services/WalletService\";\nimport trans from \"../../translation/trans\";\nimport { Reducers } from \"../reducers\";\nimport { setProposals, setProposalsExpiredMarkets, setProposalsHasMore, setProposalsLoading } from \"./proposals\";\n\nexport function createProposal(values: ProposalFormValues) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        const sdk = await connectSdk();\n        \n        if (values.type === ProposalKindType.ResoluteMarket) {\n            const tokenMetadata = await sdk.getTokenMetadata(values.resoluteMarket.collateralTokenId);\n            const percentagesInToken = percentagesToDenom(values.resoluteMarket.payoutNumerators, tokenMetadata.decimals);\n\n            contract.createResoluteMarketProposal(\n                trans('proposal.resoluteMarket.description', {\n                    description: values.resoluteMarket.marketDescription,\n                }),\n                values.resoluteMarket.marketId, \n                values.resoluteMarket.isInvalidMarket ? undefined : percentagesInToken\n            );\n        } else if (values.type === ProposalKindType.NewCouncil) {\n            contract.createNewCouncilProposal(values.newCouncil.description, values.newCouncil.accountId);\n        } else if (values.type === ProposalKindType.AddTokenWhitelist) {\n            contract.createAddTokenToWhitelistProposal(\n                values.addTokenWhitelist.description, \n                values.addTokenWhitelist.accountId, \n                values.addTokenWhitelist.decimals\n            );\n        }\n    }\n}\n\nexport function loadProposals(reset = false) {\n    return async (dispatch: Function, getState: () => Reducers) => {\n        const contract = await createDaoContract();\n        const limit = 1000;\n        \n        if (reset) {\n            dispatch(setProposals([]))\n        }\n        \n        dispatch(setProposalsLoading(true));\n        \n        const state = getState();\n        const currentLoadedProposals = state.proposals.proposals;\n        const offset = currentLoadedProposals.length.toString();\n        const proposals = await contract.getProposals(offset, limit.toString());\n\n        if (proposals.length === limit) {\n            dispatch(setProposalsHasMore(true));\n        } else {\n            dispatch(setProposalsHasMore(false));\n        }\n\n        dispatch(setProposals([\n            ...state.proposals.proposals,\n            ...proposals,\n        ]));\n        dispatch(setProposalsLoading(false));\n    }\n}\n\nexport function loadExpiredMarkets() {\n    return async (dispatch: Function) => {\n        const markets = await getExpiredMarkets();\n        dispatch(setProposalsExpiredMarkets(markets));\n    }\n}\n\nexport function voteYes(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.vote(proposalId, 'Yes');\n    }\n}\n\nexport function voteNo(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.vote(proposalId, 'No');\n    }\n}\n\nexport function finalizeProposal(proposalId: string) {\n    return async (dispatch: Function) => {\n        const contract = await createDaoContract();\n        contract.finalize(proposalId);\n    }\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProposalsOverview from '../../containers/ProposalsOverview';\nimport { Proposal } from '../../models/Proposal';\nimport { createProposal, finalizeProposal, loadExpiredMarkets, loadProposals, voteNo, voteYes } from '../../redux/proposals/proposalsActions';\nimport { Reducers } from '../../redux/reducers';\nimport { ProposalFormValues } from '../../services/ProposalsService';\n\n\nexport default function ProposalsConnector() {\n    const dispatch = useDispatch();\n    const proposals = useSelector((store: Reducers) => store.proposals.proposals);\n    const hasMoreProposals = useSelector((store: Reducers) => store.proposals.hasMoreProposals);\n    const markets = useSelector((store: Reducers) => store.proposals.expiredMarkets);\n    const loggedInAccount = useSelector((store: Reducers) => store.account.account);\n\n    useEffect(() => {\n        dispatch(loadProposals(true));\n        dispatch(loadExpiredMarkets());\n    }, [dispatch]);\n    \n    function handleSubmit(values: ProposalFormValues) {\n        dispatch(createProposal(values));\n    }\n\n    function handleYesClick(proposal: Proposal, id: number) {\n        dispatch(voteYes(id.toString()));\n    }\n\n    function handleNoClick(proposal: Proposal, id: number) {\n        dispatch(voteNo(id.toString()));\n    }\n\n    function handleFinalizeClick(proposal: Proposal, id: number) {\n        dispatch(finalizeProposal(id.toString()));\n    }\n\n    function handleRequestMoreProposals() {\n        console.log('More!');\n        dispatch(loadProposals());\n    }\n\n    return (\n        <ProposalsOverview\n            onProposalSubmit={handleSubmit} \n            proposals={proposals}\n            markets={markets}\n            onYesClick={handleYesClick}\n            onNoClick={handleNoClick}\n            onFinalizeClick={handleFinalizeClick}\n            hasMoreProposals={hasMoreProposals}\n            onRequestMoreProposals={handleRequestMoreProposals}\n            loggedInAccount={loggedInAccount}\n        />\n    );\n}","import * as Router from 'react-router';\nimport AuthPage from './pages/AuthPage';\nimport CouncilPage from './pages/CouncilPage';\nimport HomePage from './pages/HomePage';\n\ninterface RouteProps extends Router.RouteProps {\n    inNavigation: boolean;\n    key: string;\n    label: string;\n    icon?: string;\n}\n\nexport const routePaths = {\n    root: () => '/',\n    council: () => '/council',\n    auth: () => '/auth',\n}\n\nexport const routes: RouteProps[] = [\n    {\n        component: HomePage,\n        exact: true,\n        inNavigation: false,\n        key: 'home',\n        label: 'Home',\n        path: routePaths.root(),\n    },\n    {\n        component: CouncilPage,\n        exact: true,\n        inNavigation: false,\n        key: 'council',\n        label: 'Council',\n        path: routePaths.council(),\n    },\n    {\n        component: AuthPage,\n        exact: true,\n        inNavigation: false,\n        key: 'auth',\n        label: 'Auth',\n        path: routePaths.auth(),\n    },\n];\n","import React from 'react';\nimport ProposalsConnector from '../../connectors/ProposalsConnector';\nimport Page from '../../containers/Page';\nimport trans from '../../translation/trans';\n\n\nexport default function HomePage() {\n    return (\n        <Page>\n            <h1>{trans('home.title')}</h1>\n            <ProposalsConnector />\n        </Page>\n    );\n}","import React from 'react';\nimport CouncilConnector from '../../connectors/CouncilConnector';\nimport Page from '../../containers/Page';\nimport trans from '../../translation/trans';\n\n\nexport default function CouncilPage() {\n    return (\n        <Page>\n            <h1>{trans('council.title')}</h1>\n            \n            <CouncilConnector />\n        </Page>\n    );\n}","import React from 'react';\nimport AuthConnector from '../../connectors/AuthConnector';\nimport Page from '../../containers/Page';\n\nexport default function AuthPage() {\n    return (\n        <Page>\n            <AuthConnector />\n        </Page>\n    );\n}","import React, { ReactElement } from 'react';\nimport { Route, Switch } from 'react-router';\nimport { routes } from './routes';\n\nexport default function App() {\n    return (\n        <Switch>\n            {routes.map((route): ReactElement => <Route {...route} key={route.key} />)}\n        </Switch>\n    );\n}","import { combineReducers } from 'redux';\n\nimport account, { AccountState } from './account/account';\nimport proposals, { ProposalsState } from './proposals/proposals';\nimport council, { CouncilState } from './council/council';\nimport dao, { DaoState } from './dao/dao';\nimport auth, { AuthState } from './auth/auth';\n\nexport interface Reducers {\n    account: AccountState;\n    proposals: ProposalsState;\n    council: CouncilState;\n    dao: DaoState;\n    auth: AuthState;\n}\n\nexport default combineReducers<Reducers>({\n    account,\n    council,\n    proposals,\n    dao,\n    auth,\n});\n","import {\n    applyMiddleware,\n    CombinedState,\n    createStore,\n    Store,\n    StoreEnhancer,\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport reducers, { Reducers } from './reducers';\n\nconst createEnhancer = (): StoreEnhancer => (process.env.REACT_APP_APP_ENV !== 'production'\n    ? composeWithDevTools(applyMiddleware(thunk))\n    : applyMiddleware(thunk)\n);\n\nexport default function configureStore(preloadedState: Record<string, any> = {}): Store<CombinedState<Reducers>> {\n    const enhancer = createEnhancer();\n    return createStore(reducers, preloadedState, enhancer);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { StylesProvider } from '@material-ui/core/styles';\n\n\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nimport './styles/global.module.scss';\nimport configureStore from './redux/store';\n\nconst store = configureStore({});\n\nReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <StylesProvider injectFirst>\n          <App />\n        </StylesProvider>\n      </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__1vav1\",\"page__body\":\"Page_page__body__3V8v2\",\"page__body--large\":\"Page_page__body--large__27pTP\",\"page__body--unrestricted\":\"Page_page__body--unrestricted__3wRih\"};"],"sourceRoot":""}